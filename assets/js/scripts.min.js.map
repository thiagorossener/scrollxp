{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/breakpoints.json","src/js/app.js","src/js/components/menu.js","src/js/components/scroll-controller.js","src/js/components/toggle-button.js","src/js/decorators.js","src/js/scroll/controller.js","src/js/scroll/scene.js","src/js/utils.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","sm","md","lg","xl","xxl","_utils","_menu","_interopRequireDefault","_scrollController","_toggleButton","App","components","document","querySelectorAll","forEach","el","names","getAttribute","split","name","component","find","componentName","console","error","concat","existing","getData","loadedComponents","setData","debug","options","eval","ex","Constructor","obj","push","_decorators","Menu","element","_classCallCheck","this","scrollController","findComponent","anchors","bindAnchors","_scrollmagic","_controller","_scene","_breakpoints","_gsap","ScrollController","_this","content","children","smoothScrolling","_getDefaults","elementsList","tweensList","parallaxScenes","scenesList","controller","container","addIndicators","BreakpointListener","_ref","screenSize","hasChanged","initCommonScrolling","initSmoothScrolling","log","rebuild","_this2","setTimeout","resetScenes","buildParallaxScenes","buildScenes","_this3","globalElements","sceneElements","elements","isEnabled","getParallaxProperty","speed","momentum","stagger","ease","item","parallaxType","trigger","parentNode","duration","offset","hook","indicator","Object","assign","TweenMax","set","clearProps","_buildGlobalParallax","_buildScenesParallax","_this4","domScenes","domScene","getSceneProperty","scene","enabled","triggerElement","triggerHook","reverse","classToggle","pin","sceneName","setClassToggle","setPin","_createCustomAnimation","_createAnimation","addScene","_this5","removeScene","tween","clear","removePin","hasSmoothScrolling","property","defaultValue","getDataProperty","type","screenWidth","window","innerWidth","key","items","_this6","offsetHeight","on","_updateItems","getScrollPos","_this7","during","startPos","offsetTop","delta","offsetY","staggerTo","y","to","_this8","TimelineMax","add","animation","getAnimationProperty","animationProps","autoAlpha","from","alpha","x","xPercent","yPercent","scale","rotation","width","extraProps","repeat","yoyo","delay","position","label","transition","fromProps","_buildState","toProps","hasProperties","staggerFromTo","staggerFrom","fromTo","style","setTween","stateKey","properties","state","keys","ToggleButton","addEventListener","toggle","bind","updateState","toggleSmoothScrolling","querySelector","innerText","classList","remove","target","_smoothScrollbar","Controller","_scenes","_scrollbarListeners","hash","location","requestAnimationFrame","scrollTo","_scrollbar","scrollIntoView","containerEl","scrollTop","_removeAllScenes","_destroyController","_smoothScrolling","newPos","Power4","easeOut","_removeScrollbars","_addAllScenes","refreshInterval","_createScrollbars","anchor","id","currentTarget","preventDefault","section","addTo","filter","current","listener","addListener","removeListener","scrollPos","init","damping","addScrollbarListener","refresh","destroy","Scene","pinnedElement","pinnedEnterListener","pinnedLeaveListener","pinnedScrollListener","params","arguments","classes","reset","callback","elementPosY","elementOffsetY","getBoundingClientRect","top","triggerOffsetY","triggerPosY","scrollPosY","parseInt","removeScrollbarListener","off","newTriggerElement","newTriggerHook","newDuration","newProgress","progress","data","domElement","componentClass","createElement","animations","OAnimation","MozAnimation","WebkitAnimation","undefined","transitions","OTransition","MozTransition","WebkitTransition","min","max","Math","random","lastId","store","WeakMap","info","myCustomDataTag","get","breakpoints","windowWidth","timeout","checkView","slice","value","clearTimeout","Timer","timerId","start","remaining","pause","Date","resume"],"mappings":"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","file":"scripts.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","module.exports={\n  \"sm\": 480,\n  \"md\": 1024,\n  \"lg\": 1200,\n  \"xl\": 1600,\n  \"xxl\": 2000\n}\n","import { getData, setData } from './utils';\n\nimport Menu from './components/menu';\nimport ScrollController from './components/scroll-controller';\nimport ToggleButton from './components/toggle-button';\n\n\nlet App = {\n  components: [\n    Menu,\n    ScrollController,\n    ToggleButton\n  ]\n};\n\n(() => {\n  // Bind components\n  document.querySelectorAll('[data-component]').forEach(el => {\n    let names = el.getAttribute('data-component').split(',');\n    names.forEach(name => {\n      let component = App.components.find(c => c.componentName === name);\n      if (!component) {\n        console.error(`[App] Component \"${name}\" is not defined`);\n        return false;\n      } else {\n        let existing = getData(el) && getData(el).loadedComponents;\n        if (!existing) {\n          existing = [];\n          setData(el, { loadedComponents: existing })\n        }\n        if (!(name in getData(el).loadedComponents)) {\n          let options;\n          try {\n            options = eval('(' + el.getAttribute('data-component-options') + ')') || {};\n          } catch (ex) {\n            options = {};\n          }\n          let Constructor = component;\n          let obj = new Constructor(el, options);\n          existing.push(name);\n          setData(el, { component: obj })\n          console.debug(`[App] Component \"${name}\" loaded.`);\n        } else {\n          console.debug(`[App] Component \"${name}\" already loaded`);\n        }\n      }\n    });\n  });\n})();\n","import { component } from '../decorators';\nimport { findComponent } from '../utils';\nimport ScrollController from './scroll-controller';\n\n\n@component('menu')\nclass Menu {\n  constructor(element) {\n    const scrollController = findComponent(ScrollController);\n    if (scrollController) {\n      const anchors = element.querySelectorAll('a[href^=\"#\"]');\n      scrollController.bindAnchors(anchors);\n    }\n  }\n};\n\nexport default Menu;\n","import { component } from '../decorators';\n\nimport ScrollMagic from 'scrollmagic';\nimport 'scrollmagic/scrollmagic/uncompressed/plugins/debug.addIndicators';\nimport 'scrollmagic/scrollmagic/uncompressed/plugins/animation.gsap';\n\n\nimport Controller from '../scroll/controller';\nimport Scene from '../scroll/scene';\nimport { BreakpointListener } from '../utils';\nimport breakpoints from '../../breakpoints';\nimport { TweenMax, TimelineMax } from 'gsap';\n\n\n@component('scrollController')\nclass ScrollController {\n  constructor(element) {\n    this.element = element;\n    this.content = this.element.children[0];\n\n    this.smoothScrolling = false;\n\n    this.default = this._getDefaults();\n\n    this.elementsList = [];\n    this.tweensList = [];\n    this.parallaxScenes = [];\n    this.scenesList = [];\n\n    this.controller = new Controller({\n      container: this.element,\n      smoothScrolling: this.smoothScrolling,\n      addIndicators: false\n    });\n\n    new BreakpointListener(({ screenSize, hasChanged }) => {\n      if (hasChanged) {\n        // Disable smooth scrolling on mobile\n        if (this.smoothScrolling) {\n          if (screenSize === 'xs') {\n            this.controller.initCommonScrolling();\n          } else {\n            this.controller.initSmoothScrolling();\n          }\n        }\n        console.log('[ScrollController] Screen size has changed. Rebuiling scenes for:', screenSize);\n        this.rebuild();\n      }\n    }, breakpoints);\n  }\n\n  rebuild() {\n    setTimeout(() => {\n      this.resetScenes();\n      this.buildParallaxScenes();\n      this.buildScenes();\n    }, 0);\n  }\n\n  buildParallaxScenes() {\n    const globalElements = [];\n    const sceneElements = [];\n\n    const elements = this.element.querySelectorAll('[data-parallax]');\n\n    elements.forEach(element => {\n      const isEnabled = eval(this.getParallaxProperty(element, 'enabled', true));\n\n      if (isEnabled) {\n        const speed = this.getParallaxProperty(element, 'speed', 1);\n        const momentum = this.getParallaxProperty(element, 'momentum', .3);\n        const stagger = this.getParallaxProperty(element, 'stagger', null);\n        const ease = eval(this.getParallaxProperty(element, 'ease', 'Power0.easeNone'));\n\n        let item = {\n          element: element,\n          speed: speed,\n          momentum: momentum,\n          stagger: stagger,\n          ease: ease\n        };\n\n        const parallaxType = this.getParallaxProperty(element, 'parallax', 'global');\n\n        // Global items\n        if (parallaxType === 'global') {\n          globalElements.push(item);\n        }\n        // Scene items\n        else if (parallaxType === 'scene') {\n          const trigger = this.getParallaxProperty(element, 'trigger', element.parentNode);\n          const duration = this.getParallaxProperty(element, 'duration', '100%');\n          const offset = this.getParallaxProperty(element, 'offset', 0);\n          const hook = this.getParallaxProperty(element, 'hook', 'onCenter');\n          const indicator = this.getParallaxProperty(element, 'indicator', null);\n\n          item = Object.assign(item, {\n            trigger: trigger,\n            duration: duration,\n            offset: offset,\n            hook: hook,\n            indicator: indicator\n          });\n\n          sceneElements.push(item);\n        }\n      } else {\n        TweenMax.set(element, { clearProps: 'all' });\n      }\n    });\n\n    if (globalElements.length > 0) {\n      this._buildGlobalParallax(globalElements);\n    }\n\n    if (sceneElements.length > 0) {\n      this._buildScenesParallax(sceneElements);\n    }\n  }\n\n  buildScenes() {\n    const domScenes = this.element.querySelectorAll('[data-scene]');\n\n    domScenes.forEach(domScene => {\n      const isEnabled = eval(this.getSceneProperty(domScene, 'enabled', this.default.scene.enabled));\n\n      if (isEnabled) {\n        const scene = new Scene({\n          triggerElement: this.getSceneProperty(domScene, 'trigger', domScene),\n          triggerHook: this.getSceneProperty(domScene, 'hook', this.default.scene.triggerHook),\n          duration: this.getSceneProperty(domScene, 'duration', this.default.scene.duration),\n          reverse: this.getSceneProperty(domScene, 'reverse', this.default.scene.reverse)\n        });\n\n        const indicator = this.getSceneProperty(domScene, 'indicator', this.default.scene.indicator);\n        if (indicator) {\n          scene.addIndicators({ name: indicator });\n        }\n\n        const classToggle = this.getSceneProperty(domScene, 'class-toggle', this.default.scene.classToggle);\n        const pin = this.getSceneProperty(domScene, 'pin', this.default.scene.pin);\n        const sceneName = this.getSceneProperty(domScene, 'scene', this.default.scene.name);\n\n        if (classToggle) {\n          scene.setClassToggle(domScene, classToggle);\n        } else if (pin) {\n          scene.setPin(domScene);\n        } else if (sceneName) {\n          this._createCustomAnimation(scene, domScene, sceneName);\n        } else {\n          this._createAnimation(scene, domScene);\n        }\n\n        this.controller.addScene(scene);\n        this.scenesList.push(scene);\n      }\n    });\n  }\n\n  resetScenes() {\n    this.parallaxScenes.forEach(scene => this.controller.removeScene(scene));\n    this.parallaxScenes = [];\n\n    this.tweensList.forEach(tween => tween.clear());\n\n    this.scenesList.forEach(scene => {\n      scene.removePin(true);\n      this.controller.removeScene(scene)\n    });\n\n    TweenMax.set(this.elementsList, {\n      clearProps: 'all'\n    });\n\n    this.tweensList = [];\n    this.scenesList = [];\n    this.elementsList = [];\n  }\n\n  bindAnchors(anchors) {\n    this.controller.bindAnchors(anchors);\n  }\n\n  toggleSmoothScrolling() {\n    if (this.controller.hasSmoothScrolling()) {\n      this.controller.initCommonScrolling();\n      this.smoothScrolling = false;\n    } else {\n      this.controller.initSmoothScrolling();\n      this.smoothScrolling = true;\n    }\n    console.log('[ScrollController] Scrolling has changed, rebuilding scenes.');\n    this.rebuild();\n  }\n\n  hasSmoothScrolling() {\n    return this.controller.hasSmoothScrolling();\n  }\n\n  getParallaxProperty(item, property, defaultValue) {\n    return this.getDataProperty('parallax', item, property, defaultValue);\n  }\n\n  getInertiaProperty(item, property, defaultValue) {\n    return this.getDataProperty('inertia-scene', item, property, defaultValue);\n  }\n\n  getAnimationProperty(item, property, defaultValue) {\n    return this.getDataProperty('animate', item, property, defaultValue);\n  }\n\n  getSceneProperty(item, property, defaultValue) {\n    return this.getDataProperty('scene', item, property, defaultValue);\n  }\n\n  // TODO: Improve this to be independent from breakpoints, maybe using a recursive function\n  getDataProperty(type, item, property, defaultValue) {\n    const screenWidth = window.innerWidth;\n\n    let key = property === type ? type : `${type}-${property}`;\n\n    // xs\n    if (screenWidth < breakpoints['sm']) {\n      return item.getAttribute(`data-xs-${key}`) ||\n             item.getAttribute(`data-${key}`) ||\n             defaultValue;\n    }\n    // sm\n    else if (screenWidth < breakpoints['md']) {\n      return item.getAttribute(`data-sm-${key}`) ||\n             item.getAttribute(`data-xs-${key}`) ||\n             item.getAttribute(`data-${key}`) ||\n             defaultValue;\n    }\n    // md\n    else if (screenWidth < breakpoints['lg']) {\n      return item.getAttribute(`data-md-${key}`) ||\n             item.getAttribute(`data-sm-${key}`) ||\n             item.getAttribute(`data-xs-${key}`) ||\n             item.getAttribute(`data-${key}`) ||\n             defaultValue;\n    }\n    // lg\n    else if (screenWidth < breakpoints['xl']) {\n      return item.getAttribute(`data-lg-${key}`) ||\n             item.getAttribute(`data-md-${key}`) ||\n             item.getAttribute(`data-sm-${key}`) ||\n             item.getAttribute(`data-xs-${key}`) ||\n             item.getAttribute(`data-${key}`) ||\n             defaultValue;\n    }\n    // xl\n    else if (screenWidth < breakpoints['xxl']) {\n      return item.getAttribute(`data-xl-${key}`) ||\n             item.getAttribute(`data-lg-${key}`) ||\n             item.getAttribute(`data-md-${key}`) ||\n             item.getAttribute(`data-sm-${key}`) ||\n             item.getAttribute(`data-xs-${key}`) ||\n             item.getAttribute(`data-${key}`) ||\n             defaultValue;\n    }\n    // xxl\n    else {\n      return item.getAttribute(`data-xxl-${key}`) ||\n             item.getAttribute(`data-xl-${key}`) ||\n             item.getAttribute(`data-lg-${key}`) ||\n             item.getAttribute(`data-md-${key}`) ||\n             item.getAttribute(`data-sm-${key}`) ||\n             item.getAttribute(`data-xs-${key}`) ||\n             item.getAttribute(`data-${key}`) ||\n             defaultValue;\n    }\n  }\n\n  _buildGlobalParallax(items) {\n    const scene = new Scene({\n      triggerElement: this.content,\n      triggerHook: 'onLeave',\n      duration: this.content.offsetHeight\n    })\n    .on('update', () => this._updateItems(items, this.controller.getScrollPos()));\n\n    this.parallaxScenes.push(scene);\n    this.controller.addScene(scene);\n  }\n\n  _buildScenesParallax(items) {\n    items.forEach(item => {\n      let during = false;\n\n      const scene = new Scene({\n        triggerElement: item.trigger,\n        triggerHook: item.hook,\n        duration: item.duration,\n        offset: item.offset\n      })\n      .on('update', () => {\n        if (during) {\n          const startPos = scene.triggerElement().offsetTop - (scene.triggerHook() * scene.duration());\n\n          const delta = this.controller.getScrollPos() - startPos;\n\n          this._updateItems([item], delta);\n        }\n      })\n      .on('enter', () => during = true)\n      .on('leave', () => during = false);\n\n      if (item.indicator) {\n        scene.addIndicators({ name: item.indicator });\n      }\n  \n      this.parallaxScenes.push(scene);\n      this.controller.addScene(scene);\n    });\n  }\n\n  _updateItems(items, offsetY) {\n    items.forEach(item => {\n      if (item.stagger) {\n        TweenMax.staggerTo(item.element.children, item.momentum, {\n          y: offsetY/item.speed,\n          ease: item.ease\n        }, item.stagger);\n      } else {\n        if (item.momentum > 0) {\n          TweenMax.to(item.element, item.momentum, {\n            y: offsetY/item.speed,\n            ease: item.ease\n          });\n        } else {\n          TweenMax.set(item.element, {\n            y: offsetY/item.speed\n          });\n        }\n      }\n    });\n  }\n\n  _createAnimation(scene, domScene) {\n    let tween = new TimelineMax().add('start');\n\n    const items = domScene.querySelectorAll('[data-animate]');\n    items.forEach(item => {\n      const animation = this.getAnimationProperty(item, 'animate', this.default.animation.name);\n\n      const animationProps = {\n        autoAlpha: {\n          from: this.getAnimationProperty(item, 'from-alpha', this.default.animation.alpha.from),\n          to: this.getAnimationProperty(item, 'to-alpha', this.default.animation.alpha.to)\n        },\n        x: {\n          from: this.getAnimationProperty(item, 'from-x', this.default.animation.x.from),\n          to: this.getAnimationProperty(item, 'to-x', this.default.animation.x.to)\n        },\n        y: {\n          from: this.getAnimationProperty(item, 'from-y', this.default.animation.y.from),\n          to: this.getAnimationProperty(item, 'to-y', this.default.animation.y.to)\n        },\n        xPercent: {\n          from: this.getAnimationProperty(item, 'from-x-percent', this.default.animation.xPercent.from),\n          to: this.getAnimationProperty(item, 'to-x-percent', this.default.animation.xPercent.to)\n        },\n        yPercent: {\n          from: this.getAnimationProperty(item, 'from-y-percent', this.default.animation.yPercent.from),\n          to: this.getAnimationProperty(item, 'to-y-percent', this.default.animation.yPercent.to)\n        },\n        scale: {\n          from: this.getAnimationProperty(item, 'from-scale', this.default.animation.scale.from),\n          to: this.getAnimationProperty(item, 'to-scale', this.default.animation.scale.to)\n        },\n        rotation: {\n          from: this.getAnimationProperty(item, 'from-rotation', this.default.animation.rotation.from),\n          to: this.getAnimationProperty(item, 'to-rotation', this.default.animation.rotation.to)\n        },\n        width: {\n          from: this.getAnimationProperty(item, 'from-width', this.default.animation.width.from),\n          to: this.getAnimationProperty(item, 'to-width', this.default.animation.width.to)\n        }\n      };\n\n      const extraProps = {\n        ease: eval(this.getAnimationProperty(item, 'ease', this.default.animation.ease)),\n        repeat: eval(this.getAnimationProperty(item, 'repeat', this.default.animation.repeat)),\n        yoyo: eval(this.getAnimationProperty(item, 'yoyo', this.default.animation.yoyo)),\n        delay: eval(this.getAnimationProperty(item, 'delay', this.default.animation.delay))\n      };\n\n      const duration = this.getAnimationProperty(item, 'duration', this.default.animation.duration);\n      const position = this.getAnimationProperty(item, 'position', this.default.animation.position);\n      const stagger = this.getAnimationProperty(item, 'stagger', this.default.animation.stagger);\n      const label = this.getAnimationProperty(item, 'label', this.default.animation.label);\n      const transition = this.getAnimationProperty(item, 'transition', this.default.animation.transition);\n\n      const fromProps = this._buildState('from', animationProps);\n      const toProps = this._buildState('to', animationProps);\n\n      if (!animation) {\n        let hasProperties = fromProps || toProps;\n        if (hasProperties) {\n          if (stagger) {\n            if (fromProps && toProps) {\n              tween.staggerFromTo(item.children, duration, fromProps, Object.assign(toProps, extraProps), stagger, position);\n            }\n            else if (fromProps) {\n              tween.staggerFrom(item.children, duration, Object.assign(fromProps, extraProps), stagger, position);\n            }\n            else {\n              tween.staggerTo(item.children, duration, Object.assign(toProps, extraProps), stagger, position);\n            }\n            this.elementsList.push(item.children);\n          } else {\n            if (fromProps && toProps) {\n              tween.fromTo(item, duration, fromProps, Object.assign(toProps, extraProps), position);\n            }\n            else if (fromProps) {\n              tween.from(item, duration, Object.assign(fromProps, extraProps), position);\n            }\n            else {\n              tween.to(item, duration, Object.assign(toProps, extraProps), position);\n            }\n            this.elementsList.push(item);\n          }\n        }\n      }\n\n      if (label) {\n        tween.add(label);\n      }\n\n      if (transition) {\n        item.style.transition = transition;\n      }\n    });\n\n    scene.setTween(tween);\n\n    this.tweensList.push(tween);\n  }\n\n  _createCustomAnimation(scene, domScene, sceneName) {\n    // Implement custom animations here\n  }\n\n  _getDefaults() {\n    return {\n      controller: {\n        container: window,\n        addIndicators: false\n      },\n      scene: {\n        name: null,\n        triggerHook: 'onCenter',\n        duration: 0,\n        reverse: true,\n        classToggle: null,\n        pin: false,\n        enabled: true,\n        indicator: false\n      },\n      animation: {\n        name: null,\n        duration: 1,\n        position: '+=0',\n        stagger: null,\n        transition: null,\n        ease: null,\n        repeat: 0,\n        yoyo: false,\n        delay: 0,\n        label: null,\n        alpha: {\n          from: null,\n          to: null\n        },\n        x: {\n          from: null,\n          to: null\n        },\n        y: {\n          from: null,\n          to: null\n        },\n        xPercent: {\n          from: null,\n          to: null\n        },\n        yPercent: {\n          from: null,\n          to: null\n        },\n        scale: {\n          from: null,\n          to: null\n        },\n        rotation: {\n          from: null,\n          to: null\n        },\n        width: {\n          from: null,\n          to: null\n        }\n      }\n    };\n  }\n\n  _buildState(stateKey, properties) {\n    let state;\n    Object.keys(properties).forEach(key => {\n      if (properties[key][stateKey] !== null) {\n        if (!state) {\n          state = {};\n        }\n        state[key] = properties[key][stateKey];\n      }\n    });\n    return state;\n  }\n};\n\nexport default ScrollController;\n","import { component } from '../decorators';\nimport { findComponent } from '../utils';\nimport ScrollController from './scroll-controller';\n\n\n@component('toggleButton')\nclass ToggleButton {\n  constructor(element) {\n    this.element = element;\n\n    this.element.addEventListener('click', this.toggle.bind(this));\n    this.updateState();\n  }\n\n  toggle() {\n    const scrollController = findComponent(ScrollController);\n    if (scrollController) {\n      scrollController.toggleSmoothScrolling();\n      this.updateState();\n    }\n  }\n\n  updateState() {\n    const scrollController = findComponent(ScrollController);\n    if (scrollController) {\n      const hasSmoothScrolling = scrollController.hasSmoothScrolling();\n      if (hasSmoothScrolling) {\n        this.element.querySelector('span').innerText = 'On';\n        this.element.querySelector('span').classList.remove('off');\n        this.element.querySelector('span').classList.add('on');\n      } else {\n        this.element.querySelector('span').innerText = 'Off';\n        this.element.querySelector('span').classList.remove('on');\n        this.element.querySelector('span').classList.add('off');\n      }\n    }\n  }\n};\n\nexport default ToggleButton;\n","export function component(name) {\n  return function (target) {\n    target.componentName = name;\n  }\n}\n","import Scrollbar from 'smooth-scrollbar';\nimport ScrollMagic from 'scrollmagic';\nimport 'scrollmagic/scrollmagic/uncompressed/plugins/debug.addIndicators';\nimport 'scrollmagic/scrollmagic/uncompressed/plugins/animation.gsap';\nimport 'gsap/ScrollToPlugin';\n\nimport Scene from './scene';\n\n\n/**\n * Controller\n * \n * This is a wrapper for ScrollMagic controller class. It adds a smooth scrolling option and\n * some util methods.\n * \n * @param {*} options\n */\nclass Controller {\n  constructor(options) {\n    this.element = options.container || window;\n    this.options = options;\n\n    this._scenes = [];\n    this._scrollbarListeners = [];\n\n    if (this.options.smoothScrolling) {\n      this.initSmoothScrolling();\n    } else {\n      this.initCommonScrolling();\n    }\n\n    // Scroll to when loading page with hashtag\n    // https://github.com/idiotWu/smooth-scrollbar/issues/128#issuecomment-390980479\n    const hash = location.hash;\n    if (hash) {\n      requestAnimationFrame(() => {\n        setTimeout(() => {\n          this.element.scrollTo(0, 0);\n          if (this.hasSmoothScrolling()) {\n            this._scrollbar.scrollIntoView(document.querySelector(hash), {\n              offsetTop: -this._scrollbar.containerEl.scrollTop\n            });\n          } else {\n            this.controller.scrollTo(hash);\n          }\n        }, 0);\n      });\n    }\n  }\n\n  initCommonScrolling() {\n    this._removeAllScenes();\n    this._destroyController();\n\n    this._smoothScrolling = false;\n\n    delete this.options.smoothScrolling;\n\n    this.controller = new ScrollMagic.Controller(this.options);\n\n    this.controller.scrollTo(function (newPos) {\n      TweenMax.to(this, 2, {\n        scrollTo: {\n          y: newPos\n        },\n        ease: Power4.easeOut\n      });\n    });\n\n    this._removeScrollbars();\n    this._addAllScenes();\n\n    console.debug('[Controller] Created common scrolling');\n  }\n\n  initSmoothScrolling() {\n    this._removeAllScenes();\n    this._destroyController();\n\n    this._smoothScrolling = true;\n\n    delete this.options.smoothScrolling;\n\n    this.controller = new ScrollMagic.Controller(Object.assign(this.options, { refreshInterval: 0 }));\n  \n    this._createScrollbars();\n    this._addAllScenes();\n\n    console.debug('[Controller] Created smooth scrolling');\n  }\n\n  bindAnchors(anchors) {\n    anchors.forEach(anchor => {\n      // Bind scroll to anchor\n      anchor.addEventListener('click', e => {\n        const id = e.currentTarget.getAttribute('href');\n        if (id.length > 0) {\n          e.preventDefault();\n\n          if (this.hasSmoothScrolling()) {\n            const element = this.element.querySelector(id);\n            if (element) {\n              this._scrollbar.scrollIntoView(element);\n            }\n          } else {\n            this.controller.scrollTo(id);\n          }\n        }\n      });\n      // Bind anchor to scroll\n      const id = anchor.getAttribute('href');\n      const section = this.element.querySelector(id);\n      this.addScene(\n        new Scene({\n          triggerElement: section,\n          triggerHook: 'onLeave',\n          duration: section.offsetHeight\n        })\n        .on('enter', () => anchor.classList.add('is-active'))\n        .on('leave', () => anchor.classList.remove('is-active'))\n      );\n    });\n  }\n\n  addScene(scene) {\n    scene.addTo(this);\n    this._scenes.push(scene);\n  }\n\n  removeScene(scene) {\n    scene.remove();\n\n    this._scenes = this._scenes.filter(function (current) {\n      return current !== scene;\n    });\n  }\n\n  addScrollbarListener(listener) {\n    if (this._scrollbar) {\n      this._scrollbar.addListener(listener);\n\n      this._scrollbarListeners.push(listener);\n    }\n  }\n\n  removeScrollbarListener(listener) {\n    if (this._scrollbar) {\n      this._scrollbar.removeListener(listener);\n\n      this._scrollbarListeners = this._scrollbarListeners.filter(function (current) {\n        return current !== listener;\n      });\n    }\n  }\n\n  getScrollPos() {\n    if (this.hasSmoothScrolling()) {\n      return this._scrollbar.offset.y;\n    }\n    return this.controller.scrollPos();\n  }\n\n  hasSmoothScrolling() {\n    return this._smoothScrolling;\n  }\n\n  _createScrollbars() {\n    this._scrollbar = Scrollbar.init(this.element, {\n      damping: 0.05\n    });\n\n    this.addScrollbarListener(() => this._scenes.forEach(scene => scene.refresh()));\n  }\n\n  _removeScrollbars() {\n    if (this._scrollbar) {\n      this._scrollbarListeners.forEach(listener => this._scrollbar.removeListener(listener));\n      this._scrollbarListeners = [];\n      this._scrollbar.destroy();\n    }\n  }\n\n  _addAllScenes() {\n    this._scenes.forEach(scene => scene.addTo(this));\n  }\n\n  _removeAllScenes() {\n    this._scenes.forEach(scene => scene.remove());\n  }\n\n  _destroyController() {\n    if (this.controller) {\n      if (this.hasSmoothScrolling()) {\n        console.debug('[Controller] Removed smooth scrolling');\n      } else {\n        console.debug('[Controller] Removed common scrolling');\n      }\n      this.controller.destroy(true);\n    }\n  }\n};\n\nexport default Controller;\n","import ScrollMagic from 'scrollmagic';\n\n\n/**\n * Scene\n * \n * This is a wrapper for ScrollMagic scene class. It makes scene work with smooth scrolling.\n * \n * @param {*} options\n */\nclass Scene {\n  constructor(options) {\n    this.options = options;\n\n    this.controller = null;\n\n    this.pinnedElement = null;\n    this.pinnedEnterListener = null;\n    this.pinnedLeaveListener = null;\n    this.pinnedScrollListener = null;\n\n    this.scene = new ScrollMagic.Scene(this.options);\n\n    return this;\n  }\n\n  setTween(tween, duration, params) {\n    if (arguments.length > 1) {\n      if (arguments.length < 3) {\n        params = duration;\n        duration = 1;\n      }\n      tween = TweenMax.to(tween, duration, params);\n    }\n    this.scene.setTween(tween);\n    return this;\n  }\n\n  setClassToggle(element, classes) {\n    this.scene.setClassToggle(element, classes);\n    return this;\n  }\n\n  setPin(element) {\n    this.pinnedElement = element;\n    return this;\n  }\n\n  removePin(reset) {\n    this.scene.removePin(reset);\n    return this;\n  }\n\n  on(names, callback) {\n    this.scene.on(names, callback);\n    return this;\n  }\n\n  addIndicators(options) {\n    this.scene.addIndicators(options);\n    return this;\n  }\n\n  addTo(controller) {\n    this.controller = controller;\n\n    if (this.pinnedElement) {\n      /**\n       * Workaround\n       * \n       * Only in the case we're using smooth scrolling.\n       * \n       * Since transform creates a new local coordinate system, position: fixed is fixed to the origin\n       * of scrollbar content container, i.e. the left: 0, top: 0 point.\n       * \n       * Therefore, we need to apply offsets to make it work properly.\n       * https://github.com/idiotWu/smooth-scrollbar/issues/49#issuecomment-265358197\n       */\n      if (this.controller.hasSmoothScrolling()) {\n        let elementPosY = 0;\n\n        this.pinnedScrollListener = ({ offset }) => {\n          if (elementPosY === 0) {\n            const elementOffsetY = this.pinnedElement.getBoundingClientRect().top;\n            const triggerOffsetY = this.scene.triggerElement().getBoundingClientRect().top;\n            const triggerPosY = this.scene.duration() * this.scene.triggerHook();\n\n            elementPosY = elementOffsetY - triggerOffsetY + triggerPosY;\n          }\n\n          const scrollPosY = offset.y;\n\n          const top = elementPosY + scrollPosY;\n          const width = parseInt(this.pinnedElement.getBoundingClientRect().width);\n\n          this.pinnedElement.style.position = 'fixed';\n          this.pinnedElement.style.top = `${top}px`;\n          this.pinnedElement.style.width = `${width}px`;\n        };\n\n        this.pinnedEnterListener = () => this.controller.addScrollbarListener(this.pinnedScrollListener);\n        this.pinnedLeaveListener = () => this.controller.removeScrollbarListener(this.pinnedScrollListener);\n\n        this.scene.on('enter', this.pinnedEnterListener);\n        this.scene.on('leave', this.pinnedLeaveListener);\n      } else {\n        this.scene.setPin(this.pinnedElement);\n      }\n    }\n\n    this.scene.addTo(controller.controller);\n    return this;\n  }\n\n  remove() {\n    this.scene.remove();\n\n    /**\n     * Workaround\n     * \n     * Only in the case we're using smooth scrolling.\n     * \n     * Since we're adding listeners to emulate the same pin feature that ScrollMagic has, when removing the scene,\n     * we need to remove these listeners and reset the element position.\n     */\n    if (this.pinnedElement && this.controller && this.controller.hasSmoothScrolling()) {\n      this.scene.off('enter', this.pinnedEnterListener);\n      this.scene.off('leave', this.pinnedLeaveListener);\n\n      this.controller.removeScrollbarListener(this.pinnedScrollListener);\n\n      this.pinnedElement.style.position = null;\n      this.pinnedElement.style.top = null;\n      this.pinnedElement.style.width = null;\n    }\n\n    this.controller = null;\n\n    return this;\n  }\n\n  triggerElement(newTriggerElement) {\n    if (arguments.length === 0) {\n      return this.scene.triggerElement();\n    }\n    this.scene.triggerElement(newTriggerElement);\n    return this;\n  }\n\n  triggerHook(newTriggerHook) {\n    if (arguments.length === 0) {\n      return this.scene.triggerHook();\n    }\n    this.scene.triggerHook(newTriggerHook);\n    return this;\n  }\n\n  duration(newDuration) {\n    if (arguments.length === 0) {\n      return this.scene.duration();\n    }\n    this.scene.duration(newDuration);\n    return this;\n  }\n\n  progress(newProgress) {\n    if (arguments.length === 0) {\n      return this.scene.progress();\n    }\n    this.scene.progress(newProgress);\n    return this;\n  }\n\n  refresh() {\n    this.scene.refresh();\n    return this;\n  }\n};\n\nexport default Scene;\n","// Based on utils from https://blog.garstasio.com/you-dont-need-jquery/utils/\nconst data = window.WeakMap ? new WeakMap() : (function () {\n  let lastId = 0,\n      store = {};\n\n  return {\n      set: function(element, info) {\n          let id;\n          if (element.myCustomDataTag === undefined) {\n              id = lastId++;\n              element.myCustomDataTag = id;\n          }\n          store[id] = info;\n      },\n      get: function(element) {\n        return store[element.myCustomDataTag];\n      }\n  };\n}());\n\nexport function getData(el) {\n  return data.get(el);\n};\n\nexport function setData(el, obj) {\n  data.set(el, obj);\n};\n\nexport function getComponent(domElement) {\n  return getData(domElement).component;\n};\n\nexport function findComponent(componentClass) {\n  const obj = getData(document.querySelector(`[data-component=\"${componentClass.componentName}\"]`));\n  if (!obj) {\n    console.error(`[App] Couldn\\'t find instance of ${componentClass.componentName} component. Check declaration order.`);\n    return;\n  }\n  return obj.component;\n};\n\n// https://davidwalsh.name/css-animation-callback\nexport function whichAnimationEvent() {\n  let t,\n      el = document.createElement('fakeelement');\n\n  let animations = {\n    'animation': 'animationend',\n    'OAnimation': 'oAnimationEnd',\n    'MozAnimation': 'animationend',\n    'WebkitAnimation': 'webkitAnimationEnd'\n  };\n\n  for (t in animations) {\n    if (el.style[t] !== undefined) {\n      return animations[t];\n    }\n  }\n};\n\nexport function whichTransitionEvent() {\n  let t,\n      el = document.createElement('fakeelement');\n\n  let transitions = {\n    'transition': 'transitionend',\n    'OTransition': 'oTransitionEnd',\n    'MozTransition': 'transitionend',\n    'WebkitTransition': 'webkitTransitionEnd'\n  };\n\n  for (t in transitions) {\n    if (el.style[t] !== undefined) {\n      return transitions[t];\n    }\n  }\n};\n\nexport function getRandom(min, max) {\n  return Math.random() * (max - min) + min;\n};\n\n/**\n * BreakpointListener\n * \n * Provide information when screen size changes from/to several breakpoints.\n * \n * @param {function} callback\n * @param {json} breakpoints\n */\nexport class BreakpointListener {\n  constructor(callback, breakpoints) {\n    this.screenSize = null;\n    this.windowWidth = window.innerWidth;\n    this.timeout = null;\n\n    this.checkView = () => {\n      let keys = Object.keys(breakpoints);\n\n      let screenSize = keys.slice(-1)[0];\n\n      for (let i=keys.length-1; i >= 0; i--) {\n        let value = breakpoints[keys[i]];\n        if (this.windowWidth < value) {\n          screenSize = keys[i-1] || 'xs';\n        }\n      }\n\n      let hasChanged = this.screenSize !== screenSize;\n\n      this.screenSize = screenSize;\n\n      callback({\n        screenSize: this.screenSize,\n        hasChanged: hasChanged\n      });\n    };\n\n    this.listener = () => {\n      if (this.windowWidth !== window.innerWidth) {\n        this.windowWidth = window.innerWidth;\n    \n        if (this.timeout) {\n          clearTimeout(this.timeout);\n        }\n    \n        this.timeout = setTimeout(this.checkView, 250);\n      }\n    };\n  \n    window.addEventListener('resize', this.listener);\n\n    this.checkView();\n  }\n};\n\nexport class Timer {\n  constructor(callback, delay) {\n    let timerId, start, remaining = delay;\n\n    this.pause = function () {\n      window.clearTimeout(timerId);\n      remaining -= new Date() - start;\n    };\n\n    let resume = function () {\n      start = new Date();\n      timerId = window.setTimeout(function () {\n        remaining = delay;\n        resume();\n        callback();\n      }, remaining);\n    };\n    this.resume = resume;\n\n    this.reset = function () {\n      remaining = delay;\n    };\n\n    this.resume();\n  }\n};\n"]}