{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/breakpoints.json","src/js/app.js","src/js/components/menu.js","src/js/components/scroll-controller.js","src/js/components/toggle-button.js","src/js/decorators.js","src/js/scroll/controller.js","src/js/scroll/scene.js","src/js/utils.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","sm","md","lg","xl","xxl","_utils","_menu","_interopRequireDefault","_scrollController","_toggleButton","App","components","document","querySelectorAll","forEach","el","names","getAttribute","split","name","component","find","componentName","console","error","concat","existing","getData","loadedComponents","setData","debug","options","eval","ex","Constructor","obj","push","_decorators","Menu","element","_classCallCheck","this","scrollController","findComponent","anchors","bindAnchors","_scrollmagic","_controller","_scene","_breakpoints","_gsap","ScrollController","_this","content","children","smoothScrolling","parallaxScenes","controller","container","addIndicators","BreakpointListener","_ref","screenSize","hasChanged","initCommonScrolling","initSmoothScrolling","log","rebuild","_this2","setTimeout","resetScenes","buildParallaxScenes","_this3","globalElements","sceneElements","elements","isEnabled","getParallaxProperty","speed","momentum","ease","item","parallaxType","trigger","parentNode","duration","offset","hook","indicator","Object","assign","TweenMax","set","clearProps","_buildGlobalParallax","_buildScenesParallax","_this4","scene","removeScene","hasSmoothScrolling","property","defaultValue","getDataProperty","type","screenWidth","window","innerWidth","key","items","_this5","triggerElement","triggerHook","offsetHeight","on","_updateItems","getScrollPos","addScene","_this6","during","startPos","offsetTop","delta","offsetY","to","y","ToggleButton","addEventListener","toggle","bind","updateState","toggleSmoothScrolling","querySelector","innerText","classList","remove","add","target","_smoothScrollbar","Controller","_scenes","_scrollbarListeners","_removeAllScenes","_destroyController","_smoothScrolling","scrollTo","newPos","Power4","easeOut","_removeScrollbars","_addAllScenes","refreshInterval","_createScrollbars","anchor","id","currentTarget","preventDefault","_scrollbar","scrollIntoView","section","addTo","filter","current","listener","addListener","removeListener","scrollPos","init","damping","addScrollbarListener","refresh","destroy","Scene","tween","params","arguments","setTween","classes","setClassToggle","pinnedElement","callback","newTriggerElement","newTriggerHook","newDuration","data","domElement","componentClass","createElement","animations","animation","OAnimation","MozAnimation","WebkitAnimation","undefined","style","transitions","transition","OTransition","MozTransition","WebkitTransition","min","max","Math","random","lastId","store","WeakMap","info","myCustomDataTag","get","breakpoints","windowWidth","timeout","checkView","keys","slice","value","clearTimeout","Timer","delay","timerId","start","remaining","pause","Date","resume","reset"],"mappings":"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","file":"scripts.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","module.exports={\n  \"sm\": 480,\n  \"md\": 1024,\n  \"lg\": 1200,\n  \"xl\": 1600,\n  \"xxl\": 2000\n}\n","import { getData, setData } from './utils';\n\nimport Menu from './components/menu';\nimport ScrollController from './components/scroll-controller';\nimport ToggleButton from './components/toggle-button';\n\n\nlet App = {\n  components: [\n    Menu,\n    ScrollController,\n    ToggleButton\n  ]\n};\n\n(() => {\n  // Bind components\n  document.querySelectorAll('[data-component]').forEach(el => {\n    let names = el.getAttribute('data-component').split(',');\n    names.forEach(name => {\n      let component = App.components.find(c => c.componentName === name);\n      if (!component) {\n        console.error(`[App] Component \"${name}\" is not defined`);\n        return false;\n      } else {\n        let existing = getData(el) && getData(el).loadedComponents;\n        if (!existing) {\n          existing = [];\n          setData(el, { loadedComponents: existing })\n        }\n        if (!(name in getData(el).loadedComponents)) {\n          let options;\n          try {\n            options = eval('(' + el.getAttribute('data-component-options') + ')') || {};\n          } catch (ex) {\n            options = {};\n          }\n          let Constructor = component;\n          let obj = new Constructor(el, options);\n          existing.push(name);\n          setData(el, { component: obj })\n          console.debug(`[App] Component \"${name}\" loaded.`);\n        } else {\n          console.debug(`[App] Component \"${name}\" already loaded`);\n        }\n      }\n    });\n  });\n})();\n","import { component } from '../decorators';\nimport { findComponent } from '../utils';\nimport ScrollController from './scroll-controller';\n\n\n@component('menu')\nclass Menu {\n  constructor(element) {\n    const scrollController = findComponent(ScrollController);\n    if (scrollController) {\n      const anchors = element.querySelectorAll('a[href^=\"#\"]');\n      scrollController.bindAnchors(anchors);\n    }\n  }\n};\n\nexport default Menu;\n","import { component } from '../decorators';\n\nimport ScrollMagic from 'scrollmagic';\nimport 'scrollmagic/scrollmagic/uncompressed/plugins/debug.addIndicators';\nimport 'scrollmagic/scrollmagic/uncompressed/plugins/animation.gsap';\n\n\nimport Controller from '../scroll/controller';\nimport Scene from '../scroll/scene';\nimport { BreakpointListener } from '../utils';\nimport breakpoints from '../../breakpoints';\nimport { TweenMax } from 'gsap';\n\n\n@component('scrollController')\nclass ScrollController {\n  constructor(element) {\n    this.element = element;\n    this.content = this.element.children[0];\n\n    this.smoothScrolling = false;\n\n    this.parallaxScenes = [];\n\n    this.controller = new Controller({\n      container: this.element,\n      smoothScrolling: this.smoothScrolling,\n      addIndicators: false\n    });\n\n    new BreakpointListener(({ screenSize, hasChanged }) => {\n      if (hasChanged) {\n        // Disable smooth scrolling on mobile\n        if (this.smoothScrolling) {\n          if (screenSize === 'xs') {\n            this.controller.initCommonScrolling();\n          } else {\n            this.controller.initSmoothScrolling();\n          }\n        }\n        console.log('[ScrollController] Screen size has changed. Rebuiling scenes for:', screenSize);\n        this.rebuild();\n      }\n    }, breakpoints);\n  }\n\n  rebuild() {\n    setTimeout(() => {\n      this.resetScenes();\n      this.buildParallaxScenes();\n    }, 0);\n  }\n\n  buildParallaxScenes() {\n    const globalElements = [];\n    const sceneElements = [];\n\n    const elements = this.element.querySelectorAll('[data-parallax]');\n\n    elements.forEach(element => {\n      const isEnabled = eval(this.getParallaxProperty(element, 'enabled', true));\n\n      if (isEnabled) {\n        const speed = this.getParallaxProperty(element, 'speed', 1);\n        const momentum = this.getParallaxProperty(element, 'momentum', .3);\n        const ease = eval(this.getParallaxProperty(element, 'ease', 'Power0.easeNone'));\n\n        let item = {\n          element: element,\n          speed: speed,\n          momentum: momentum,\n          ease: ease\n        };\n\n        const parallaxType = this.getParallaxProperty(element, 'parallax', 'global');\n\n        // Global items\n        if (parallaxType === 'global') {\n          globalElements.push(item);\n        }\n        // Scene items\n        else if (parallaxType === 'scene') {\n          const trigger = this.getParallaxProperty(element, 'trigger', element.parentNode);\n          const duration = this.getParallaxProperty(element, 'duration', '100%');\n          const offset = this.getParallaxProperty(element, 'offset', 0);\n          const hook = this.getParallaxProperty(element, 'hook', 'onCenter');\n          const indicator = this.getParallaxProperty(element, 'indicator', null);\n\n          item = Object.assign(item, {\n            trigger: trigger,\n            duration: duration,\n            offset: offset,\n            hook: hook,\n            indicator: indicator\n          });\n\n          sceneElements.push(item);\n        }\n      } else {\n        TweenMax.set(element, { clearProps: 'all' });\n      }\n    });\n\n    if (globalElements.length > 0) {\n      this._buildGlobalParallax(globalElements);\n    }\n\n    if (sceneElements.length > 0) {\n      this._buildScenesParallax(sceneElements);\n    }\n  }\n\n  resetScenes() {\n    this.parallaxScenes.forEach(scene => this.controller.removeScene(scene));\n    this.parallaxScenes = [];\n  }\n\n  bindAnchors(anchors) {\n    this.controller.bindAnchors(anchors);\n  }\n\n  toggleSmoothScrolling() {\n    if (this.controller.hasSmoothScrolling()) {\n      this.controller.initCommonScrolling();\n      this.smoothScrolling = false;\n    } else {\n      this.controller.initSmoothScrolling();\n      this.smoothScrolling = true;\n    }\n    console.log('[ScrollController] Scrolling has changed, rebuilding scenes.');\n    this.rebuild();\n  }\n\n  hasSmoothScrolling() {\n    return this.controller.hasSmoothScrolling();\n  }\n\n  getParallaxProperty(item, property, defaultValue) {\n    return this.getDataProperty('parallax', item, property, defaultValue);\n  }\n\n  getAnimationProperty(item, property, defaultValue) {\n    return this.getDataProperty('animate', item, property, defaultValue);\n  }\n\n  getSceneProperty(item, property, defaultValue) {\n    return this.getDataProperty('scene', item, property, defaultValue);\n  }\n\n  // TODO: Improve this to be independent from breakpoints, maybe using a recursive function\n  getDataProperty(type, item, property, defaultValue) {\n    const screenWidth = window.innerWidth;\n\n    let key = property === type ? type : `${type}-${property}`;\n\n    // xs\n    if (screenWidth < breakpoints['sm']) {\n      return item.getAttribute(`data-xs-${key}`) ||\n             item.getAttribute(`data-${key}`) ||\n             defaultValue;\n    }\n    // sm\n    else if (screenWidth < breakpoints['md']) {\n      return item.getAttribute(`data-sm-${key}`) ||\n             item.getAttribute(`data-xs-${key}`) ||\n             item.getAttribute(`data-${key}`) ||\n             defaultValue;\n    }\n    // md\n    else if (screenWidth < breakpoints['lg']) {\n      return item.getAttribute(`data-md-${key}`) ||\n             item.getAttribute(`data-sm-${key}`) ||\n             item.getAttribute(`data-xs-${key}`) ||\n             item.getAttribute(`data-${key}`) ||\n             defaultValue;\n    }\n    // lg\n    else if (screenWidth < breakpoints['xl']) {\n      return item.getAttribute(`data-lg-${key}`) ||\n             item.getAttribute(`data-md-${key}`) ||\n             item.getAttribute(`data-sm-${key}`) ||\n             item.getAttribute(`data-xs-${key}`) ||\n             item.getAttribute(`data-${key}`) ||\n             defaultValue;\n    }\n    // xl\n    else if (screenWidth < breakpoints['xxl']) {\n      return item.getAttribute(`data-xl-${key}`) ||\n             item.getAttribute(`data-lg-${key}`) ||\n             item.getAttribute(`data-md-${key}`) ||\n             item.getAttribute(`data-sm-${key}`) ||\n             item.getAttribute(`data-xs-${key}`) ||\n             item.getAttribute(`data-${key}`) ||\n             defaultValue;\n    }\n    // xxl\n    else {\n      return item.getAttribute(`data-xxl-${key}`) ||\n             item.getAttribute(`data-xl-${key}`) ||\n             item.getAttribute(`data-lg-${key}`) ||\n             item.getAttribute(`data-md-${key}`) ||\n             item.getAttribute(`data-sm-${key}`) ||\n             item.getAttribute(`data-xs-${key}`) ||\n             item.getAttribute(`data-${key}`) ||\n             defaultValue;\n    }\n  }\n\n  _buildGlobalParallax(items) {\n    const scene = new Scene({\n      triggerElement: this.content,\n      triggerHook: 'onLeave',\n      duration: this.content.offsetHeight\n    })\n    .on('update', () => this._updateItems(items, this.controller.getScrollPos()));\n\n    this.parallaxScenes.push(scene);\n    this.controller.addScene(scene);\n  }\n\n  _buildScenesParallax(items) {\n    items.forEach(item => {\n      let during = false;\n\n      const scene = new Scene({\n        triggerElement: item.trigger,\n        triggerHook: item.hook,\n        duration: item.duration,\n        offset: item.offset\n      })\n      .on('update', () => {\n        if (during) {\n          const startPos = scene.triggerElement().offsetTop - (scene.triggerHook() * scene.duration());\n\n          const delta = this.controller.getScrollPos() - startPos;\n\n          this._updateItems([item], delta);\n        }\n      })\n      .on('enter', () => during = true)\n      .on('leave', () => during = false);\n\n      if (item.indicator) {\n        scene.addIndicators({ name: item.indicator });\n      }\n  \n      this.parallaxScenes.push(scene);\n      this.controller.addScene(scene);\n    });\n  }\n\n  _updateItems(items, offsetY) {\n    items.forEach(item => {\n      if (item.momentum > 0) {\n        TweenMax.to(item.element, item.momentum, {\n          y: offsetY/item.speed,\n          ease: item.ease\n        });\n      } else {\n        TweenMax.set(item.element, {\n          y: offsetY/item.speed\n        });\n      }\n    });\n  }\n};\n\nexport default ScrollController;\n","import { component } from '../decorators';\nimport { findComponent } from '../utils';\nimport ScrollController from './scroll-controller';\n\n\n@component('toggleButton')\nclass ToggleButton {\n  constructor(element) {\n    this.element = element;\n\n    this.element.addEventListener('click', this.toggle.bind(this));\n    this.updateState();\n  }\n\n  toggle() {\n    const scrollController = findComponent(ScrollController);\n    if (scrollController) {\n      scrollController.toggleSmoothScrolling();\n      this.updateState();\n    }\n  }\n\n  updateState() {\n    const scrollController = findComponent(ScrollController);\n    if (scrollController) {\n      const hasSmoothScrolling = scrollController.hasSmoothScrolling();\n      if (hasSmoothScrolling) {\n        this.element.querySelector('span').innerText = 'On';\n        this.element.querySelector('span').classList.remove('off');\n        this.element.querySelector('span').classList.add('on');\n      } else {\n        this.element.querySelector('span').innerText = 'Off';\n        this.element.querySelector('span').classList.remove('on');\n        this.element.querySelector('span').classList.add('off');\n      }\n    }\n  }\n};\n\nexport default ToggleButton;\n","export function component(name) {\n  return function (target) {\n    target.componentName = name;\n  }\n}\n","import Scrollbar from 'smooth-scrollbar';\nimport ScrollMagic from 'scrollmagic';\nimport 'scrollmagic/scrollmagic/uncompressed/plugins/debug.addIndicators';\nimport 'scrollmagic/scrollmagic/uncompressed/plugins/animation.gsap';\nimport 'gsap/ScrollToPlugin';\n\nimport Scene from './scene';\n\n\nclass Controller {\n  constructor(options) {\n    this.element = options.container || window;\n    this.options = options;\n\n    this._scenes = [];\n    this._scrollbarListeners = [];\n\n    if (this.options.smoothScrolling) {\n      this.initSmoothScrolling();\n    } else {\n      this.initCommonScrolling();\n    }\n  }\n\n  initCommonScrolling() {\n    this._removeAllScenes();\n    this._destroyController();\n\n    this._smoothScrolling = false;\n\n    delete this.options.smoothScrolling;\n\n    this.controller = new ScrollMagic.Controller(this.options);\n\n    this.controller.scrollTo(function (newPos) {\n      TweenMax.to(this, 2, {\n        scrollTo: {\n          y: newPos\n        },\n        ease: Power4.easeOut\n      });\n    });\n\n    this._removeScrollbars();\n    this._addAllScenes();\n\n    console.debug('[Controller] Created common scrolling');\n  }\n\n  initSmoothScrolling() {\n    this._removeAllScenes();\n    this._destroyController();\n\n    this._smoothScrolling = true;\n\n    delete this.options.smoothScrolling;\n\n    this.controller = new ScrollMagic.Controller(Object.assign(this.options, { refreshInterval: 0 }));\n  \n    this._createScrollbars();\n    this._addAllScenes();\n\n    console.debug('[Controller] Created smooth scrolling');\n  }\n\n  bindAnchors(anchors) {\n    anchors.forEach(anchor => {\n      // Bind scroll to anchor\n      anchor.addEventListener('click', e => {\n        const id = e.currentTarget.getAttribute('href');\n        if (id.length > 0) {\n          e.preventDefault();\n\n          if (this.hasSmoothScrolling()) {\n            const element = this.element.querySelector(id);\n            if (element) {\n              this._scrollbar.scrollIntoView(element);\n            }\n          } else {\n            this.controller.scrollTo(id);\n          }\n        }\n      });\n      // Bind anchor to scroll\n      const id = anchor.getAttribute('href');\n      const section = this.element.querySelector(id);\n      this.addScene(\n        new Scene({\n          triggerElement: section,\n          triggerHook: 'onLeave',\n          duration: section.offsetHeight\n        })\n        .on('enter', () => anchor.classList.add('is-active'))\n        .on('leave', () => anchor.classList.remove('is-active'))\n      );\n    });\n  }\n\n  addScene(scene) {\n    scene.addTo(this);\n    this._scenes.push(scene);\n  }\n\n  removeScene(scene) {\n    scene.remove();\n\n    this._scenes = this._scenes.filter(function (current) {\n      return current !== scene;\n    });\n  }\n\n  addScrollbarListener(listener) {\n    if (this._scrollbar) {\n      this._scrollbar.addListener(listener);\n\n      this._scrollbarListeners.push(listener);\n    }\n  }\n\n  removeScrollbarListener(listener) {\n    if (this._scrollbar) {\n      this._scrollbar.removeListener(listener);\n\n      this._scrollbarListeners = this._scrollbarListeners.filter(function (current) {\n        return current !== listener;\n      });\n    }\n  }\n\n  getScrollPos() {\n    if (this.hasSmoothScrolling()) {\n      return this._scrollbar.offset.y;\n    }\n    return this.controller.scrollPos();\n  }\n\n  hasSmoothScrolling() {\n    return this._smoothScrolling;\n  }\n\n  _createScrollbars() {\n    this._scrollbar = Scrollbar.init(this.element, {\n      damping: 0.05\n    });\n\n    this.addScrollbarListener(() => this._scenes.forEach(scene => scene.refresh()));\n  }\n\n  _removeScrollbars() {\n    if (this._scrollbar) {\n      this._scrollbarListeners.forEach(listener => this._scrollbar.removeListener(listener));\n      this._scrollbarListeners = [];\n      this._scrollbar.destroy();\n    }\n  }\n\n  _addAllScenes() {\n    this._scenes.forEach(scene => scene.addTo(this));\n  }\n\n  _removeAllScenes() {\n    this._scenes.forEach(scene => scene.remove());\n  }\n\n  _destroyController() {\n    if (this.controller) {\n      if (this.hasSmoothScrolling()) {\n        console.debug('[Controller] Removed smooth scrolling');\n      } else {\n        console.debug('[Controller] Removed common scrolling');\n      }\n      this.controller.destroy(true);\n    }\n  }\n};\n\nexport default Controller;\n","import ScrollMagic from 'scrollmagic';\n\n\nclass Scene {\n  constructor(options) {\n    this.options = options;\n\n    this.controller = null;\n\n    this.scene = new ScrollMagic.Scene(this.options);\n\n    return this;\n  }\n\n  setTween(tween, duration, params) {\n    if (arguments.length > 1) {\n      if (arguments.length < 3) {\n        params = duration;\n        duration = 1;\n      }\n      tween = TweenMax.to(tween, duration, params);\n    }\n    this.scene.setTween(tween);\n    return this;\n  }\n\n  setClassToggle(element, classes) {\n    this.scene.setClassToggle(element, classes);\n    return this;\n  }\n\n  setPin(element) {\n    this.pinnedElement = element;\n    return this;\n  }\n\n  on(names, callback) {\n    this.scene.on(names, callback);\n    return this;\n  }\n\n  addIndicators(options) {\n    this.scene.addIndicators(options);\n    return this;\n  }\n\n  addTo(controller) {\n    this.controller = controller;\n    this.scene.addTo(controller.controller);\n    return this;\n  }\n\n  remove() {\n    this.scene.remove();\n    this.controller = null;\n    return this;\n  }\n\n  triggerElement(newTriggerElement) {\n    if (arguments.length === 0) {\n      return this.scene.triggerElement();\n    }\n    this.scene.triggerElement(newTriggerElement);\n    return this;\n  }\n\n  triggerHook(newTriggerHook) {\n    if (arguments.length === 0) {\n      return this.scene.triggerHook();\n    }\n    this.scene.triggerHook(newTriggerHook);\n    return this;\n  }\n\n  duration(newDuration) {\n    if (arguments.length === 0) {\n      return this.scene.duration();\n    }\n    this.scene.duration(newDuration);\n    return this;\n  }\n\n  refresh() {\n    this.scene.refresh();\n    return this;\n  }\n};\n\nexport default Scene;\n","// Based on utils from https://blog.garstasio.com/you-dont-need-jquery/utils/\nconst data = window.WeakMap ? new WeakMap() : (function () {\n  let lastId = 0,\n      store = {};\n\n  return {\n      set: function(element, info) {\n          let id;\n          if (element.myCustomDataTag === undefined) {\n              id = lastId++;\n              element.myCustomDataTag = id;\n          }\n          store[id] = info;\n      },\n      get: function(element) {\n        return store[element.myCustomDataTag];\n      }\n  };\n}());\n\nexport function getData(el) {\n  return data.get(el);\n};\n\nexport function setData(el, obj) {\n  data.set(el, obj);\n};\n\nexport function getComponent(domElement) {\n  return getData(domElement).component;\n};\n\nexport function findComponent(componentClass) {\n  const obj = getData(document.querySelector(`[data-component=\"${componentClass.componentName}\"]`));\n  if (!obj) {\n    console.error(`[App] Couldn\\'t find instance of ${componentClass.componentName} component. Check declaration order.`);\n    return;\n  }\n  return obj.component;\n};\n\n// https://davidwalsh.name/css-animation-callback\nexport function whichAnimationEvent() {\n  let t,\n      el = document.createElement('fakeelement');\n\n  let animations = {\n    'animation': 'animationend',\n    'OAnimation': 'oAnimationEnd',\n    'MozAnimation': 'animationend',\n    'WebkitAnimation': 'webkitAnimationEnd'\n  };\n\n  for (t in animations) {\n    if (el.style[t] !== undefined) {\n      return animations[t];\n    }\n  }\n};\n\nexport function whichTransitionEvent() {\n  let t,\n      el = document.createElement('fakeelement');\n\n  let transitions = {\n    'transition': 'transitionend',\n    'OTransition': 'oTransitionEnd',\n    'MozTransition': 'transitionend',\n    'WebkitTransition': 'webkitTransitionEnd'\n  };\n\n  for (t in transitions) {\n    if (el.style[t] !== undefined) {\n      return transitions[t];\n    }\n  }\n};\n\nexport function getRandom(min, max) {\n  return Math.random() * (max - min) + min;\n};\n\n/**\n * BreakpointListener\n * \n * Provide information when screen size changes from/to several breakpoints.\n * \n * @param {function} callback\n * @param {json} breakpoints\n */\nexport class BreakpointListener {\n  constructor(callback, breakpoints) {\n    this.screenSize = null;\n    this.windowWidth = window.innerWidth;\n    this.timeout = null;\n\n    this.checkView = () => {\n      let keys = Object.keys(breakpoints);\n\n      let screenSize = keys.slice(-1)[0];\n\n      for (let i=keys.length-1; i >= 0; i--) {\n        let value = breakpoints[keys[i]];\n        if (this.windowWidth < value) {\n          screenSize = keys[i-1] || 'xs';\n        }\n      }\n\n      let hasChanged = this.screenSize !== screenSize;\n\n      this.screenSize = screenSize;\n\n      callback({\n        screenSize: this.screenSize,\n        hasChanged: hasChanged\n      });\n    };\n\n    this.listener = () => {\n      if (this.windowWidth !== window.innerWidth) {\n        this.windowWidth = window.innerWidth;\n    \n        if (this.timeout) {\n          clearTimeout(this.timeout);\n        }\n    \n        this.timeout = setTimeout(this.checkView, 250);\n      }\n    };\n  \n    window.addEventListener('resize', this.listener);\n\n    this.checkView();\n  }\n};\n\nexport class Timer {\n  constructor(callback, delay) {\n    let timerId, start, remaining = delay;\n\n    this.pause = function () {\n      window.clearTimeout(timerId);\n      remaining -= new Date() - start;\n    };\n\n    let resume = function () {\n      start = new Date();\n      timerId = window.setTimeout(function () {\n        remaining = delay;\n        resume();\n        callback();\n      }, remaining);\n    };\n    this.resume = resume;\n\n    this.reset = function () {\n      remaining = delay;\n    };\n\n    this.resume();\n  }\n};\n"]}