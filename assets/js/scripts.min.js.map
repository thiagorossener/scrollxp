{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/breakpoints.json","src/js/app.js","src/js/components/menu.js","src/js/components/scroll-controller.js","src/js/components/toggle-button.js","src/js/decorators.js","src/js/scroll/controller.js","src/js/scroll/scene.js","src/js/utils.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","sm","md","lg","xl","xxl","_utils","_menu","_interopRequireDefault","_scrollController","_toggleButton","App","components","document","querySelectorAll","forEach","el","names","getAttribute","split","name","component","find","componentName","console","error","concat","existing","getData","loadedComponents","setData","debug","options","eval","ex","Constructor","obj","push","_decorators","Menu","element","_classCallCheck","this","scrollController","findComponent","anchors","bindAnchors","_scrollmagic","_controller","_scene","_breakpoints","_gsap","ScrollController","_this","content","children","smoothScrolling","parallaxScenes","parallaxListeners","controller","container","addIndicators","BreakpointListener","_ref","screenSize","hasChanged","initCommonScrolling","initSmoothScrolling","log","rebuild","_this2","setTimeout","resetScenes","buildParallaxScenes","_this3","updateItems","items","offsetY","item","momentum","TweenMax","to","y","speed","ease","set","parallaxElements","result","elements","isEnabled","getParallaxProperty","clearProps","hasSmoothScrolling","listener","instance","offset","addScrollbarListener","scene","triggerElement","triggerHook","duration","offsetHeight","on","scrollPos","addScene","_this4","removeScene","removeScrollbarListener","property","defaultValue","getDataProperty","type","screenWidth","window","innerWidth","key","ToggleButton","addEventListener","toggle","bind","updateState","toggleSmoothScrolling","querySelector","innerText","classList","remove","add","target","_smoothScrollbar","Controller","_scenes","_scrollbarListeners","_removeAllScenes","_destroyController","_smoothScrolling","scrollTo","newPos","Power4","easeOut","_removeScrollbars","_addAllScenes","Object","assign","refreshInterval","_createScrollbars","anchor","id","currentTarget","preventDefault","_scrollbar","scrollIntoView","section","addTo","filter","current","addListener","removeListener","init","damping","refresh","destroy","Scene","tween","params","arguments","setTween","classes","setClassToggle","pinnedElement","callback","newTriggerElement","newDuration","data","domElement","componentClass","createElement","animations","animation","OAnimation","MozAnimation","WebkitAnimation","undefined","style","transitions","transition","OTransition","MozTransition","WebkitTransition","min","max","Math","random","lastId","store","WeakMap","info","myCustomDataTag","get","breakpoints","windowWidth","timeout","checkView","keys","slice","value","clearTimeout","Timer","delay","timerId","start","remaining","pause","Date","resume","reset"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,GCAAI,EAAAJ,QAAA,CACAK,GAAA,IACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,IAAA,2DCLA,IAAAC,OAAAhB,QAAA,WAEAiB,MAAAC,uBAAAlB,QAAA,sBACAmB,kBAAAD,uBAAAlB,QAAA,mCACAoB,cAAAF,uBAAAlB,QAAA,uGAGA,IAAIqB,IAAM,CACRC,WAAY,CACVL,MAAA,QACAE,kBAAA,QACAC,cAAA,WAIJ,WAEEG,SAASC,iBAAiB,oBAAoBC,QAAQ,SAAAC,IACpD,IAAIC,MAAQD,GAAGE,aAAa,kBAAkBC,MAAM,KACpDF,MAAMF,QAAQ,SAAAK,MACZ,IAAIC,UAAYV,IAAIC,WAAWU,KAAK,SAAAjC,GAAC,OAAIA,EAAEkC,gBAAkBH,OAC7D,IAAKC,UAEH,OADAG,QAAQC,MAAR,oBAAAC,OAAkCN,KAAlC,sBACO,EAEP,IAAIO,UAAW,EAAArB,OAAAsB,SAAQZ,MAAO,EAAAV,OAAAsB,SAAQZ,IAAIa,iBAK1C,GAJKF,WACHA,SAAW,IACX,EAAArB,OAAAwB,SAAQd,GAAI,CAAEa,iBAAkBF,YAE5BP,QAAQ,EAAAd,OAAAsB,SAAQZ,IAAIa,iBAaxBL,QAAQO,MAAR,oBAAAL,OAAkCN,KAAlC,yBAb2C,CAC3C,IAAIY,QACJ,IACEA,QAAUC,KAAK,IAAMjB,GAAGE,aAAa,0BAA4B,MAAQ,GACzE,MAAOgB,GACPF,QAAU,GAEZ,IAAIG,YAAcd,UACde,IAAM,IAAID,YAAYnB,GAAIgB,SAC9BL,SAASU,KAAKjB,OACd,EAAAd,OAAAwB,SAAQd,GAAI,CAAEK,UAAWe,MACzBZ,QAAQO,MAAR,oBAAAL,OAAkCN,KAAlC,mBA1BV,6MCfA,QAAAkB,EAAAhD,EAAA,iBACAgB,EAAAhB,EAAA,YACAmB,KAAAnB,EAAA,2DAGC,EAAAgD,EAAAjB,WAAU,UAET,SAAAkB,EAAYC,gGAASC,CAAAC,KAAAH,GACnB,IAAMI,GAAmB,EAAArC,EAAAsC,eAAcnC,EAAA,SACvC,GAAIkC,EAAkB,CACpB,IAAME,EAAUL,EAAQ1B,iBAAiB,gBACzC6B,EAAiBG,YAAYD,+MCXnC,IAAAP,YAAAhD,QAAA,iBAEAyD,aAAAvC,uBAAAlB,QAAA,gBACAA,QAAA,oEACAA,QAAA,+DAGA,IAAA0D,YAAAxC,uBAAAlB,QAAA,yBACA2D,OAAAzC,uBAAAlB,QAAA,oBACAgB,OAAAhB,QAAA,YACA4D,aAAA1C,uBAAAlB,QAAA,sBACA6D,MAAA7D,QAAA,seAIM8D,wBADL,EAAAd,YAAAjB,WAAU,2CAET,SAAA+B,iBAAYZ,GAAS,IAAAa,EAAAX,KAAAD,gBAAAC,KAAAU,kBACnBV,KAAKF,QAAUA,EACfE,KAAKY,QAAUZ,KAAKF,QAAQe,SAAS,GAErCb,KAAKc,iBAAkB,EAEvBd,KAAKe,eAAiB,GACtBf,KAAKgB,kBAAoB,GAEzBhB,KAAKiB,WAAa,IAAIX,YAAA,QAAW,CAC/BY,UAAWlB,KAAKF,QAChBgB,gBAAiBd,KAAKc,gBACtBK,eAAe,IAGjB,IAAIvD,OAAAwD,mBAAmB,SAAAC,GAAgC,IAA7BC,EAA6BD,EAA7BC,WAA6BD,EAAjBE,aAG9BZ,EAAKG,kBACY,OAAfQ,EACFX,EAAKM,WAAWO,sBAEhBb,EAAKM,WAAWQ,uBAGpB3C,QAAQ4C,IAAI,oEAAqEJ,GACjFX,EAAKgB,YAENnB,aAAA,+EAGK,IAAAoB,EAAA5B,KACR6B,WAAW,WACTD,EAAKE,cACLF,EAAKG,uBACJ,qEAGiB,IAAAC,OAAAhC,KACdiC,YAAc,SAACC,EAAOC,GAC1BD,EAAM7D,QAAQ,SAAA+D,GACQ,EAAhBA,EAAKC,SACP5B,MAAA6B,SAASC,GAAGH,EAAKtC,QAASsC,EAAKC,SAAU,CACvCG,EAAGL,EAAQC,EAAKK,MAChBC,KAAMN,EAAKM,OAGbjC,MAAA6B,SAASK,IAAIP,EAAKtC,QAAS,CACzB0C,EAAGL,EAAQC,EAAKK,WAMlBG,iBAAoB,WACxB,IAAMC,OAAS,GAETC,SAAWd,OAAKlC,QAAQ1B,iBAAiB,mBAkB/C,OAjBA0E,SAASzE,QAAQ,SAAAyB,SACf,IAAMiD,UAAYxD,KAAKyC,OAAKgB,oBAAoBlD,QAAS,WAAW,IACpE,GAAIiD,UAAW,CACb,IAAMN,MAAQT,OAAKgB,oBAAoBlD,QAAS,QAAS,GACnDuC,SAAWL,OAAKgB,oBAAoBlD,QAAS,WAAY,IACzD4C,KAAOnD,KAAKyC,OAAKgB,oBAAoBlD,QAAS,OAAQ,oBAC5D+C,OAAOlD,KAAK,CACVG,QAASA,QACT2C,MAAOA,MACPJ,SAAUA,SACVK,KAAMA,YAGRjC,MAAA6B,SAASK,IAAI7C,QAAS,CAAEmD,WAAY,UAIjCJ,OArBiB,GAwB1B,GAA8B,EAA1BD,iBAAiBxF,OAEnB,GAAI4C,KAAKiB,WAAWiC,qBAAsB,CACxC,IAAMC,SAAW,SAACC,GAAD,OAAcnB,YAAYW,iBAAkBQ,EAASC,OAAOb,IAE7ExC,KAAKgB,kBAAkBrB,KAAKwD,UAC5BnD,KAAKiB,WAAWqC,qBAAqBH,cAGlC,CACH,IAAMI,MAAQ,IAAIhD,OAAA,QAAM,CACtBiD,eAAgBxD,KAAKY,QACrB6C,YAAa,UACbC,SAAU1D,KAAKY,QAAQ+C,eAExBC,GAAG,SAAU,SAAAR,GAAQ,OAAInB,YAAYW,iBAAkBQ,EAASS,aAEjE7D,KAAKe,eAAepB,KAAK4D,OACzBvD,KAAKiB,WAAW6C,SAASP,8CAKjB,IAAAQ,EAAA/D,KACZA,KAAKe,eAAe1C,QAAQ,SAAAkF,GAAK,OAAIQ,EAAK9C,WAAW+C,YAAYT,KACjEvD,KAAKe,eAAiB,GAEtBf,KAAKgB,kBAAkB3C,QAAQ,SAAA8E,GAAQ,OAAIY,EAAK9C,WAAWgD,wBAAwBd,KACnFnD,KAAKgB,kBAAoB,uCAGfb,GACVH,KAAKiB,WAAWb,YAAYD,mDAIxBH,KAAKiB,WAAWiC,sBAClBlD,KAAKiB,WAAWO,sBAChBxB,KAAKc,iBAAkB,IAEvBd,KAAKiB,WAAWQ,sBAChBzB,KAAKc,iBAAkB,GAEzBhC,QAAQ4C,IAAI,gEACZ1B,KAAK2B,uDAIL,OAAO3B,KAAKiB,WAAWiC,iEAGLd,EAAM8B,EAAUC,GAClC,OAAOnE,KAAKoE,gBAAgB,WAAYhC,EAAM8B,EAAUC,gDAGrC/B,EAAM8B,EAAUC,GACnC,OAAOnE,KAAKoE,gBAAgB,UAAWhC,EAAM8B,EAAUC,4CAGxC/B,EAAM8B,EAAUC,GAC/B,OAAOnE,KAAKoE,gBAAgB,QAAShC,EAAM8B,EAAUC,2CAIvCE,EAAMjC,EAAM8B,EAAUC,GACpC,IAAMG,EAAcC,OAAOC,WAEvBC,EAAMP,IAAaG,EAAOA,EAApB,GAAArF,OAA8BqF,EAA9B,KAAArF,OAAsCkF,GAGhD,OAAII,EAAc9D,aAAA,QAAA,GACT4B,EAAK5D,aAAL,WAAAQ,OAA6ByF,KAC7BrC,EAAK5D,aAAL,QAAAQ,OAA0ByF,KAC1BN,EAGAG,EAAc9D,aAAA,QAAA,GACd4B,EAAK5D,aAAL,WAAAQ,OAA6ByF,KAC7BrC,EAAK5D,aAAL,WAAAQ,OAA6ByF,KAC7BrC,EAAK5D,aAAL,QAAAQ,OAA0ByF,KAC1BN,EAGAG,EAAc9D,aAAA,QAAA,GACd4B,EAAK5D,aAAL,WAAAQ,OAA6ByF,KAC7BrC,EAAK5D,aAAL,WAAAQ,OAA6ByF,KAC7BrC,EAAK5D,aAAL,WAAAQ,OAA6ByF,KAC7BrC,EAAK5D,aAAL,QAAAQ,OAA0ByF,KAC1BN,EAGAG,EAAc9D,aAAA,QAAA,GACd4B,EAAK5D,aAAL,WAAAQ,OAA6ByF,KAC7BrC,EAAK5D,aAAL,WAAAQ,OAA6ByF,KAC7BrC,EAAK5D,aAAL,WAAAQ,OAA6ByF,KAC7BrC,EAAK5D,aAAL,WAAAQ,OAA6ByF,KAC7BrC,EAAK5D,aAAL,QAAAQ,OAA0ByF,KAC1BN,EAGAG,EAAc9D,aAAA,QAAA,IACd4B,EAAK5D,aAAL,WAAAQ,OAA6ByF,KAC7BrC,EAAK5D,aAAL,WAAAQ,OAA6ByF,KAC7BrC,EAAK5D,aAAL,WAAAQ,OAA6ByF,KAC7BrC,EAAK5D,aAAL,WAAAQ,OAA6ByF,KAC7BrC,EAAK5D,aAAL,WAAAQ,OAA6ByF,KAC7BrC,EAAK5D,aAAL,QAAAQ,OAA0ByF,KAC1BN,EAIA/B,EAAK5D,aAAL,YAAAQ,OAA8ByF,KAC9BrC,EAAK5D,aAAL,WAAAQ,OAA6ByF,KAC7BrC,EAAK5D,aAAL,WAAAQ,OAA6ByF,KAC7BrC,EAAK5D,aAAL,WAAAQ,OAA6ByF,KAC7BrC,EAAK5D,aAAL,WAAAQ,OAA6ByF,KAC7BrC,EAAK5D,aAAL,WAAAQ,OAA6ByF,KAC7BrC,EAAK5D,aAAL,QAAAQ,OAA0ByF,KAC1BN,6CAKEzD,0hBCzNf,QAAAd,EAAAhD,EAAA,iBACAgB,EAAAhB,EAAA,YACAmB,KAAAnB,EAAA,iOAGC,EAAAgD,EAAAjB,WAAU,6BAET,SAAA+F,EAAY5E,gGAASC,CAAAC,KAAA0E,GACnB1E,KAAKF,QAAUA,EAEfE,KAAKF,QAAQ6E,iBAAiB,QAAS3E,KAAK4E,OAAOC,KAAK7E,OACxDA,KAAK8E,sGAIL,IAAM7E,GAAmB,EAAArC,EAAAsC,eAAcnC,EAAA,SACnCkC,IACFA,EAAiB8E,wBACjB/E,KAAK8E,qDAKP,IAAM7E,GAAmB,EAAArC,EAAAsC,eAAcnC,EAAA,SACnCkC,IACyBA,EAAiBiD,sBAE1ClD,KAAKF,QAAQkF,cAAc,QAAQC,UAAY,KAC/CjF,KAAKF,QAAQkF,cAAc,QAAQE,UAAUC,OAAO,OACpDnF,KAAKF,QAAQkF,cAAc,QAAQE,UAAUE,IAAI,QAEjDpF,KAAKF,QAAQkF,cAAc,QAAQC,UAAY,MAC/CjF,KAAKF,QAAQkF,cAAc,QAAQE,UAAUC,OAAO,MACpDnF,KAAKF,QAAQkF,cAAc,QAAQE,UAAUE,IAAI,0LCjClD,SAAmB1G,GACxB,OAAO,SAAU2G,GACfA,EAAOxG,cAAgBH,2GCF3B,IAAA4G,EAAAxH,EAAAlB,EAAA,qBACAyD,EAAAvC,EAAAlB,EAAA,gBACAA,EAAA,oEACAA,EAAA,+DACAA,EAAA,uBAEA,IAAA2D,EAAAzC,EAAAlB,EAAA,sPAIE,SAAA2I,EAAYjG,gGAASS,CAAAC,KAAAuF,GACnBvF,KAAKF,QAAUR,EAAQ4B,WAAaqD,OACpCvE,KAAKV,QAAUA,EAEfU,KAAKwF,QAAU,GACfxF,KAAKyF,oBAAsB,GAEvBzF,KAAKV,QAAQwB,gBACfd,KAAKyB,sBAELzB,KAAKwB,2HAKPxB,KAAK0F,mBACL1F,KAAK2F,qBAEL3F,KAAK4F,kBAAmB,SAEjB5F,KAAKV,QAAQwB,gBAEpBd,KAAKiB,WAAa,IAAIZ,EAAA,QAAYkF,WAAWvF,KAAKV,SAElDU,KAAKiB,WAAW4E,SAAS,SAAUC,GACjCxD,SAASC,GAAGvC,KAAM,EAAG,CACnB6F,SAAU,CACRrD,EAAGsD,GAELpD,KAAMqD,OAAOC,YAIjBhG,KAAKiG,oBACLjG,KAAKkG,gBAELpH,QAAQO,MAAM,uFAIdW,KAAK0F,mBACL1F,KAAK2F,qBAEL3F,KAAK4F,kBAAmB,SAEjB5F,KAAKV,QAAQwB,gBAEpBd,KAAKiB,WAAa,IAAIZ,EAAA,QAAYkF,WAAWY,OAAOC,OAAOpG,KAAKV,QAAS,CAAE+G,gBAAiB,KAE5FrG,KAAKsG,oBACLtG,KAAKkG,gBAELpH,QAAQO,MAAM,6EAGJc,GAAS,IAAAQ,EAAAX,KACnBG,EAAQ9B,QAAQ,SAAAkI,GAEdA,EAAO5B,iBAAiB,QAAS,SAAAtI,GAC/B,IAAMmK,EAAKnK,EAAEoK,cAAcjI,aAAa,QACxC,GAAgB,EAAZgI,EAAGpJ,OAGL,GAFAf,EAAEqK,iBAEE/F,EAAKuC,qBAAsB,CAC7B,IAAMpD,EAAUa,EAAKb,QAAQkF,cAAcwB,GACvC1G,GACFa,EAAKgG,WAAWC,eAAe9G,QAGjCa,EAAKM,WAAW4E,SAASW,KAK/B,IAAMA,EAAKD,EAAO/H,aAAa,QACzBqI,EAAUlG,EAAKb,QAAQkF,cAAcwB,GAC3C7F,EAAKmD,SACH,IAAIvD,EAAA,QAAM,CACRiD,eAAgBqD,EAChBpD,YAAa,UACbC,SAAUmD,EAAQlD,eAEnBC,GAAG,QAAS,WAAA,OAAM2C,EAAOrB,UAAUE,IAAI,eACvCxB,GAAG,QAAS,WAAA,OAAM2C,EAAOrB,UAAUC,OAAO,mDAKxC5B,GACPA,EAAMuD,MAAM9G,MACZA,KAAKwF,QAAQ7F,KAAK4D,uCAGRA,GACVA,EAAM4B,SAENnF,KAAKwF,QAAUxF,KAAKwF,QAAQuB,OAAO,SAAUC,GAC3C,OAAOA,IAAYzD,iDAIFJ,GACfnD,KAAK2G,aACP3G,KAAK2G,WAAWM,YAAY9D,GAE5BnD,KAAKyF,oBAAoB9F,KAAKwD,oDAIVA,GAClBnD,KAAK2G,aACP3G,KAAK2G,WAAWO,eAAe/D,GAE/BnD,KAAKyF,oBAAsBzF,KAAKyF,oBAAoBsB,OAAO,SAAUC,GACnE,OAAOA,IAAY7D,kDAMvB,OAAOnD,KAAK4F,6DAGM,IAAAhE,EAAA5B,KAClBA,KAAK2G,WAAarB,EAAA,QAAU6B,KAAKnH,KAAKF,QAAS,CAC7CsH,QAAS,MAGXpH,KAAKsD,qBAAqB,WAAA,OAAM1B,EAAK4D,QAAQnH,QAAQ,SAAAkF,GAAK,OAAIA,EAAM8D,0DAGlD,IAAArF,EAAAhC,KACdA,KAAK2G,aACP3G,KAAKyF,oBAAoBpH,QAAQ,SAAA8E,GAAQ,OAAInB,EAAK2E,WAAWO,eAAe/D,KAC5EnD,KAAKyF,oBAAsB,GAC3BzF,KAAK2G,WAAWW,mDAIJ,IAAAvD,EAAA/D,KACdA,KAAKwF,QAAQnH,QAAQ,SAAAkF,GAAK,OAAIA,EAAMuD,MAAM/C,gDAI1C/D,KAAKwF,QAAQnH,QAAQ,SAAAkF,GAAK,OAAIA,EAAM4B,wDAIhCnF,KAAKiB,aACHjB,KAAKkD,qBACPpE,QAAQO,MAAM,yCAEdP,QAAQO,MAAM,yCAEhBW,KAAKiB,WAAWqG,SAAQ,yfCpK9B,MAAAjH,KAAAzD,EAAA,mOAIE,SAAA2K,EAAYjI,GAOV,mGAPmBS,CAAAC,KAAAuH,GACnBvH,KAAKV,QAAUA,EAEfU,KAAKiB,WAAa,KAElBjB,KAAKuD,MAAQ,IAAIlD,EAAA,QAAYkH,MAAMvH,KAAKV,SAEjCU,6FAGAwH,EAAO9D,EAAU+D,GASxB,OARuB,EAAnBC,UAAUtK,SACRsK,UAAUtK,OAAS,IACrBqK,EAAS/D,EACTA,EAAW,GAEb8D,EAAQlF,SAASC,GAAGiF,EAAO9D,EAAU+D,IAEvCzH,KAAKuD,MAAMoE,SAASH,GACbxH,4CAGMF,EAAS8H,GAEtB,OADA5H,KAAKuD,MAAMsE,eAAe/H,EAAS8H,GAC5B5H,oCAGFF,GAEL,OADAE,KAAK8H,cAAgBhI,EACdE,gCAGNzB,EAAOwJ,GAER,OADA/H,KAAKuD,MAAMK,GAAGrF,EAAOwJ,GACd/H,2CAGKV,GAEZ,OADAU,KAAKuD,MAAMpC,cAAc7B,GAClBU,mCAGHiB,GAGJ,OAFAjB,KAAKiB,WAAaA,EAClBjB,KAAKuD,MAAMuD,MAAM7F,EAAWA,YACrBjB,sCAMP,OAFAA,KAAKuD,MAAM4B,SACXnF,KAAKiB,WAAa,KACXjB,4CAGMgI,GAEb,OADAhI,KAAKuD,MAAMC,eAAewE,GACnBhI,sCAGAiI,GAEP,OADAjI,KAAKuD,MAAMG,SAASuE,GACbjI,uCAKP,OADAA,KAAKuD,MAAM8D,UACJrH,6PC9CJ,SAAiB1B,EAAIoB,GAC1BwI,EAAKvF,IAAIrE,EAAIoB,mBAGR,SAAsByI,GAC3B,OAAOjJ,EAAQiJ,GAAYxJ,2BAGtB,SAAuByJ,GAC5B,IAAM1I,EAAMR,EAAQf,SAAS6G,cAAT,oBAAAhG,OAA2CoJ,EAAevJ,cAA1D,QACpB,OAAKa,EAIEA,EAAIf,eAHTG,QAAQC,MAAR,mCAAAC,OAAkDoJ,EAAevJ,cAAjE,gEAOG,WACL,IAAItC,EACA+B,EAAKH,SAASkK,cAAc,eAE5BC,EAAa,CACfC,UAAa,eACbC,WAAc,gBACdC,aAAgB,eAChBC,gBAAmB,sBAGrB,IAAKnM,KAAK+L,EACR,QAAoBK,IAAhBrK,EAAGsK,MAAMrM,GACX,OAAO+L,EAAW/L,2BAKjB,WACL,IAAIA,EACA+B,EAAKH,SAASkK,cAAc,eAE5BQ,EAAc,CAChBC,WAAc,gBACdC,YAAe,iBACfC,cAAiB,gBACjBC,iBAAoB,uBAGtB,IAAK1M,KAAKsM,EACR,QAAoBF,IAAhBrK,EAAGsK,MAAMrM,GACX,OAAOsM,EAAYtM,gBAKlB,SAAmB2M,EAAKC,GAC7B,OAAOC,KAAKC,UAAYF,EAAMD,GAAOA,uCA9EvC,IACMI,EACAC,EAFArB,EAAO3D,OAAOiF,QAAU,IAAIA,SAC5BF,EAAS,EACTC,EAAQ,GAEL,CACH5G,IAAK,SAAS7C,EAAS2J,GACnB,IAAIjD,OAC4BmC,IAA5B7I,EAAQ4J,kBACRlD,EAAK8C,IACLxJ,EAAQ4J,gBAAkBlD,GAE9B+C,EAAM/C,GAAMiD,GAEhBE,IAAK,SAAS7J,GACZ,OAAOyJ,EAAMzJ,EAAQ4J,oBAKtB,SAASxK,EAAQZ,GACtB,OAAO4J,EAAKyB,IAAIrL,wBAsEhB,SAAA8C,EAAY2G,EAAU6B,GAAa,IAAAjJ,EAAAX,KAAAD,EAAAC,KAAAoB,GACjCpB,KAAKsB,WAAa,KAClBtB,KAAK6J,YAActF,OAAOC,WAC1BxE,KAAK8J,QAAU,KAEf9J,KAAK+J,UAAY,WAKf,IAJA,IAAIC,EAAO7D,OAAO6D,KAAKJ,GAEnBtI,EAAa0I,EAAKC,OAAO,GAAG,GAEvBxN,EAAEuN,EAAK5M,OAAO,EAAQ,GAALX,EAAQA,IAAK,CACrC,IAAIyN,EAAQN,EAAYI,EAAKvN,IACzBkE,EAAKkJ,YAAcK,IACrB5I,EAAa0I,EAAKvN,EAAE,IAAM,MAI9B,IAAI8E,EAAaZ,EAAKW,aAAeA,EAErCX,EAAKW,WAAaA,EAElByG,EAAS,CACPzG,WAAYX,EAAKW,WACjBC,WAAYA,KAIhBvB,KAAKmD,SAAW,WACVxC,EAAKkJ,cAAgBtF,OAAOC,aAC9B7D,EAAKkJ,YAActF,OAAOC,WAEtB7D,EAAKmJ,SACPK,aAAaxJ,EAAKmJ,SAGpBnJ,EAAKmJ,QAAUjI,WAAWlB,EAAKoJ,UAAW,OAI9CxF,OAAOI,iBAAiB,SAAU3E,KAAKmD,UAEvCnD,KAAK+J,qBAKP,SAAAK,EAAYrC,EAAUsC,GAAOtK,EAAAC,KAAAoK,GAC3B,IAAIE,EAASC,EAAOC,EAAYH,EAEhCrK,KAAKyK,MAAQ,WACXlG,OAAO4F,aAAaG,GACpBE,GAAa,IAAIE,KAASH,GAW5BvK,KAAK2K,OARQ,SAATA,IACFJ,EAAQ,IAAIG,KACZJ,EAAU/F,OAAO1C,WAAW,WAC1B2I,EAAYH,EACZM,IACA5C,KACCyC,IAILxK,KAAK4K,MAAQ,WACXJ,EAAYH,GAGdrK,KAAK2K","file":"scripts.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","module.exports={\n  \"sm\": 480,\n  \"md\": 1024,\n  \"lg\": 1200,\n  \"xl\": 1600,\n  \"xxl\": 2000\n}\n","import { getData, setData } from './utils';\n\nimport Menu from './components/menu';\nimport ScrollController from './components/scroll-controller';\nimport ToggleButton from './components/toggle-button';\n\n\nlet App = {\n  components: [\n    Menu,\n    ScrollController,\n    ToggleButton\n  ]\n};\n\n(() => {\n  // Bind components\n  document.querySelectorAll('[data-component]').forEach(el => {\n    let names = el.getAttribute('data-component').split(',');\n    names.forEach(name => {\n      let component = App.components.find(c => c.componentName === name);\n      if (!component) {\n        console.error(`[App] Component \"${name}\" is not defined`);\n        return false;\n      } else {\n        let existing = getData(el) && getData(el).loadedComponents;\n        if (!existing) {\n          existing = [];\n          setData(el, { loadedComponents: existing })\n        }\n        if (!(name in getData(el).loadedComponents)) {\n          let options;\n          try {\n            options = eval('(' + el.getAttribute('data-component-options') + ')') || {};\n          } catch (ex) {\n            options = {};\n          }\n          let Constructor = component;\n          let obj = new Constructor(el, options);\n          existing.push(name);\n          setData(el, { component: obj })\n          console.debug(`[App] Component \"${name}\" loaded.`);\n        } else {\n          console.debug(`[App] Component \"${name}\" already loaded`);\n        }\n      }\n    });\n  });\n})();\n","import { component } from '../decorators';\nimport { findComponent } from '../utils';\nimport ScrollController from './scroll-controller';\n\n\n@component('menu')\nclass Menu {\n  constructor(element) {\n    const scrollController = findComponent(ScrollController);\n    if (scrollController) {\n      const anchors = element.querySelectorAll('a[href^=\"#\"]');\n      scrollController.bindAnchors(anchors);\n    }\n  }\n};\n\nexport default Menu;\n","import { component } from '../decorators';\n\nimport ScrollMagic from 'scrollmagic';\nimport 'scrollmagic/scrollmagic/uncompressed/plugins/debug.addIndicators';\nimport 'scrollmagic/scrollmagic/uncompressed/plugins/animation.gsap';\n\n\nimport Controller from '../scroll/controller';\nimport Scene from '../scroll/scene';\nimport { BreakpointListener } from '../utils';\nimport breakpoints from '../../breakpoints';\nimport { TweenMax } from 'gsap';\n\n\n@component('scrollController')\nclass ScrollController {\n  constructor(element) {\n    this.element = element;\n    this.content = this.element.children[0];\n\n    this.smoothScrolling = false;\n\n    this.parallaxScenes = [];\n    this.parallaxListeners = [];\n\n    this.controller = new Controller({\n      container: this.element,\n      smoothScrolling: this.smoothScrolling,\n      addIndicators: true\n    });\n\n    new BreakpointListener(({ screenSize, hasChanged }) => {\n      if (hasChanged) {\n        // Disable smooth scrolling on mobile\n        if (this.smoothScrolling) {\n          if (screenSize === 'xs') {\n            this.controller.initCommonScrolling();\n          } else {\n            this.controller.initSmoothScrolling();\n          }\n        }\n        console.log('[ScrollController] Screen size has changed. Rebuiling scenes for:', screenSize);\n        this.rebuild();\n      }\n    }, breakpoints);\n  }\n\n  rebuild() {\n    setTimeout(() => {\n      this.resetScenes();\n      this.buildParallaxScenes();\n    }, 0);\n  }\n\n  buildParallaxScenes() {\n    const updateItems = (items, offsetY) => {\n      items.forEach(item => {\n        if (item.momentum > 0) {\n          TweenMax.to(item.element, item.momentum, {\n            y: offsetY/item.speed,\n            ease: item.ease\n          });\n        } else {\n          TweenMax.set(item.element, {\n            y: offsetY/item.speed\n          });\n        }\n      });\n    };\n\n    const parallaxElements = (() => {\n      const result = [];\n\n      const elements = this.element.querySelectorAll('[data-parallax]');\n      elements.forEach(element => {\n        const isEnabled = eval(this.getParallaxProperty(element, 'enabled', true));\n        if (isEnabled) {\n          const speed = this.getParallaxProperty(element, 'speed', 1);\n          const momentum = this.getParallaxProperty(element, 'momentum', .3);\n          const ease = eval(this.getParallaxProperty(element, 'ease', 'Power0.easeNone'));\n          result.push({\n            element: element,\n            speed: speed,\n            momentum: momentum,\n            ease: ease\n          });\n        } else {\n          TweenMax.set(element, { clearProps: 'all' });\n        }\n      });\n\n      return result;\n    })();\n\n    if (parallaxElements.length > 0) {\n      // Smooth Scrolling\n      if (this.controller.hasSmoothScrolling()) {\n        const listener = (instance) => updateItems(parallaxElements, instance.offset.y);\n\n        this.parallaxListeners.push(listener);\n        this.controller.addScrollbarListener(listener);\n      }\n      // Common Scrolling\n      else {\n        const scene = new Scene({\n          triggerElement: this.content,\n          triggerHook: 'onLeave',\n          duration: this.content.offsetHeight\n        })\n        .on('update', instance => updateItems(parallaxElements, instance.scrollPos));\n\n        this.parallaxScenes.push(scene);\n        this.controller.addScene(scene);\n      }\n    }\n  }\n\n  resetScenes() {\n    this.parallaxScenes.forEach(scene => this.controller.removeScene(scene));\n    this.parallaxScenes = [];\n\n    this.parallaxListeners.forEach(listener => this.controller.removeScrollbarListener(listener));\n    this.parallaxListeners = [];\n  }\n\n  bindAnchors(anchors) {\n    this.controller.bindAnchors(anchors);\n  }\n\n  toggleSmoothScrolling() {\n    if (this.controller.hasSmoothScrolling()) {\n      this.controller.initCommonScrolling();\n      this.smoothScrolling = false;\n    } else {\n      this.controller.initSmoothScrolling();\n      this.smoothScrolling = true;\n    }\n    console.log('[ScrollController] Scrolling has changed, rebuilding scenes.');\n    this.rebuild();\n  }\n\n  hasSmoothScrolling() {\n    return this.controller.hasSmoothScrolling();\n  }\n\n  getParallaxProperty(item, property, defaultValue) {\n    return this.getDataProperty('parallax', item, property, defaultValue);\n  }\n\n  getAnimationProperty(item, property, defaultValue) {\n    return this.getDataProperty('animate', item, property, defaultValue);\n  }\n\n  getSceneProperty(item, property, defaultValue) {\n    return this.getDataProperty('scene', item, property, defaultValue);\n  }\n\n  // TODO: Improve this to be independent from breakpoints, maybe using a recursive function\n  getDataProperty(type, item, property, defaultValue) {\n    const screenWidth = window.innerWidth;\n\n    let key = property === type ? type : `${type}-${property}`;\n\n    // xs\n    if (screenWidth < breakpoints['sm']) {\n      return item.getAttribute(`data-xs-${key}`) ||\n             item.getAttribute(`data-${key}`) ||\n             defaultValue;\n    }\n    // sm\n    else if (screenWidth < breakpoints['md']) {\n      return item.getAttribute(`data-sm-${key}`) ||\n             item.getAttribute(`data-xs-${key}`) ||\n             item.getAttribute(`data-${key}`) ||\n             defaultValue;\n    }\n    // md\n    else if (screenWidth < breakpoints['lg']) {\n      return item.getAttribute(`data-md-${key}`) ||\n             item.getAttribute(`data-sm-${key}`) ||\n             item.getAttribute(`data-xs-${key}`) ||\n             item.getAttribute(`data-${key}`) ||\n             defaultValue;\n    }\n    // lg\n    else if (screenWidth < breakpoints['xl']) {\n      return item.getAttribute(`data-lg-${key}`) ||\n             item.getAttribute(`data-md-${key}`) ||\n             item.getAttribute(`data-sm-${key}`) ||\n             item.getAttribute(`data-xs-${key}`) ||\n             item.getAttribute(`data-${key}`) ||\n             defaultValue;\n    }\n    // xl\n    else if (screenWidth < breakpoints['xxl']) {\n      return item.getAttribute(`data-xl-${key}`) ||\n             item.getAttribute(`data-lg-${key}`) ||\n             item.getAttribute(`data-md-${key}`) ||\n             item.getAttribute(`data-sm-${key}`) ||\n             item.getAttribute(`data-xs-${key}`) ||\n             item.getAttribute(`data-${key}`) ||\n             defaultValue;\n    }\n    // xxl\n    else {\n      return item.getAttribute(`data-xxl-${key}`) ||\n             item.getAttribute(`data-xl-${key}`) ||\n             item.getAttribute(`data-lg-${key}`) ||\n             item.getAttribute(`data-md-${key}`) ||\n             item.getAttribute(`data-sm-${key}`) ||\n             item.getAttribute(`data-xs-${key}`) ||\n             item.getAttribute(`data-${key}`) ||\n             defaultValue;\n    }\n  }\n};\n\nexport default ScrollController;\n","import { component } from '../decorators';\nimport { findComponent } from '../utils';\nimport ScrollController from './scroll-controller';\n\n\n@component('toggleButton')\nclass ToggleButton {\n  constructor(element) {\n    this.element = element;\n\n    this.element.addEventListener('click', this.toggle.bind(this));\n    this.updateState();\n  }\n\n  toggle() {\n    const scrollController = findComponent(ScrollController);\n    if (scrollController) {\n      scrollController.toggleSmoothScrolling();\n      this.updateState();\n    }\n  }\n\n  updateState() {\n    const scrollController = findComponent(ScrollController);\n    if (scrollController) {\n      const hasSmoothScrolling = scrollController.hasSmoothScrolling();\n      if (hasSmoothScrolling) {\n        this.element.querySelector('span').innerText = 'On';\n        this.element.querySelector('span').classList.remove('off');\n        this.element.querySelector('span').classList.add('on');\n      } else {\n        this.element.querySelector('span').innerText = 'Off';\n        this.element.querySelector('span').classList.remove('on');\n        this.element.querySelector('span').classList.add('off');\n      }\n    }\n  }\n};\n\nexport default ToggleButton;\n","export function component(name) {\n  return function (target) {\n    target.componentName = name;\n  }\n}\n","import Scrollbar from 'smooth-scrollbar';\nimport ScrollMagic from 'scrollmagic';\nimport 'scrollmagic/scrollmagic/uncompressed/plugins/debug.addIndicators';\nimport 'scrollmagic/scrollmagic/uncompressed/plugins/animation.gsap';\nimport 'gsap/ScrollToPlugin';\n\nimport Scene from './scene';\n\n\nclass Controller {\n  constructor(options) {\n    this.element = options.container || window;\n    this.options = options;\n\n    this._scenes = [];\n    this._scrollbarListeners = [];\n\n    if (this.options.smoothScrolling) {\n      this.initSmoothScrolling();\n    } else {\n      this.initCommonScrolling();\n    }\n  }\n\n  initCommonScrolling() {\n    this._removeAllScenes();\n    this._destroyController();\n\n    this._smoothScrolling = false;\n\n    delete this.options.smoothScrolling;\n\n    this.controller = new ScrollMagic.Controller(this.options);\n\n    this.controller.scrollTo(function (newPos) {\n      TweenMax.to(this, 2, {\n        scrollTo: {\n          y: newPos\n        },\n        ease: Power4.easeOut\n      });\n    });\n\n    this._removeScrollbars();\n    this._addAllScenes();\n\n    console.debug('[Controller] Created common scrolling');\n  }\n\n  initSmoothScrolling() {\n    this._removeAllScenes();\n    this._destroyController();\n\n    this._smoothScrolling = true;\n\n    delete this.options.smoothScrolling;\n\n    this.controller = new ScrollMagic.Controller(Object.assign(this.options, { refreshInterval: 0 }));\n  \n    this._createScrollbars();\n    this._addAllScenes();\n\n    console.debug('[Controller] Created smooth scrolling');\n  }\n\n  bindAnchors(anchors) {\n    anchors.forEach(anchor => {\n      // Bind scroll to anchor\n      anchor.addEventListener('click', e => {\n        const id = e.currentTarget.getAttribute('href');\n        if (id.length > 0) {\n          e.preventDefault();\n\n          if (this.hasSmoothScrolling()) {\n            const element = this.element.querySelector(id);\n            if (element) {\n              this._scrollbar.scrollIntoView(element);\n            }\n          } else {\n            this.controller.scrollTo(id);\n          }\n        }\n      });\n      // Bind anchor to scroll\n      const id = anchor.getAttribute('href');\n      const section = this.element.querySelector(id);\n      this.addScene(\n        new Scene({\n          triggerElement: section,\n          triggerHook: 'onLeave',\n          duration: section.offsetHeight\n        })\n        .on('enter', () => anchor.classList.add('is-active'))\n        .on('leave', () => anchor.classList.remove('is-active'))\n      );\n    });\n  }\n\n  addScene(scene) {\n    scene.addTo(this);\n    this._scenes.push(scene);\n  }\n\n  removeScene(scene) {\n    scene.remove();\n\n    this._scenes = this._scenes.filter(function (current) {\n      return current !== scene;\n    });\n  }\n\n  addScrollbarListener(listener) {\n    if (this._scrollbar) {\n      this._scrollbar.addListener(listener);\n\n      this._scrollbarListeners.push(listener);\n    }\n  }\n\n  removeScrollbarListener(listener) {\n    if (this._scrollbar) {\n      this._scrollbar.removeListener(listener);\n\n      this._scrollbarListeners = this._scrollbarListeners.filter(function (current) {\n        return current !== listener;\n      });\n    }\n  }\n\n  hasSmoothScrolling() {\n    return this._smoothScrolling;\n  }\n\n  _createScrollbars() {\n    this._scrollbar = Scrollbar.init(this.element, {\n      damping: 0.05\n    });\n\n    this.addScrollbarListener(() => this._scenes.forEach(scene => scene.refresh()));\n  }\n\n  _removeScrollbars() {\n    if (this._scrollbar) {\n      this._scrollbarListeners.forEach(listener => this._scrollbar.removeListener(listener));\n      this._scrollbarListeners = [];\n      this._scrollbar.destroy();\n    }\n  }\n\n  _addAllScenes() {\n    this._scenes.forEach(scene => scene.addTo(this));\n  }\n\n  _removeAllScenes() {\n    this._scenes.forEach(scene => scene.remove());\n  }\n\n  _destroyController() {\n    if (this.controller) {\n      if (this.hasSmoothScrolling()) {\n        console.debug('[Controller] Removed smooth scrolling');\n      } else {\n        console.debug('[Controller] Removed common scrolling');\n      }\n      this.controller.destroy(true);\n    }\n  }\n};\n\nexport default Controller;\n","import ScrollMagic from 'scrollmagic';\n\n\nclass Scene {\n  constructor(options) {\n    this.options = options;\n\n    this.controller = null;\n\n    this.scene = new ScrollMagic.Scene(this.options);\n\n    return this;\n  }\n\n  setTween(tween, duration, params) {\n    if (arguments.length > 1) {\n      if (arguments.length < 3) {\n        params = duration;\n        duration = 1;\n      }\n      tween = TweenMax.to(tween, duration, params);\n    }\n    this.scene.setTween(tween);\n    return this;\n  }\n\n  setClassToggle(element, classes) {\n    this.scene.setClassToggle(element, classes);\n    return this;\n  }\n\n  setPin(element) {\n    this.pinnedElement = element;\n    return this;\n  }\n\n  on(names, callback) {\n    this.scene.on(names, callback);\n    return this;\n  }\n\n  addIndicators(options) {\n    this.scene.addIndicators(options);\n    return this;\n  }\n\n  addTo(controller) {\n    this.controller = controller;\n    this.scene.addTo(controller.controller);\n    return this;\n  }\n\n  remove() {\n    this.scene.remove();\n    this.controller = null;\n    return this;\n  }\n\n  triggerElement(newTriggerElement) {\n    this.scene.triggerElement(newTriggerElement);\n    return this;\n  }\n\n  duration(newDuration) {\n    this.scene.duration(newDuration);\n    return this;\n  }\n\n  refresh() {\n    this.scene.refresh();\n    return this;\n  }\n};\n\nexport default Scene;\n","// Based on utils from https://blog.garstasio.com/you-dont-need-jquery/utils/\nconst data = window.WeakMap ? new WeakMap() : (function () {\n  let lastId = 0,\n      store = {};\n\n  return {\n      set: function(element, info) {\n          let id;\n          if (element.myCustomDataTag === undefined) {\n              id = lastId++;\n              element.myCustomDataTag = id;\n          }\n          store[id] = info;\n      },\n      get: function(element) {\n        return store[element.myCustomDataTag];\n      }\n  };\n}());\n\nexport function getData(el) {\n  return data.get(el);\n};\n\nexport function setData(el, obj) {\n  data.set(el, obj);\n};\n\nexport function getComponent(domElement) {\n  return getData(domElement).component;\n};\n\nexport function findComponent(componentClass) {\n  const obj = getData(document.querySelector(`[data-component=\"${componentClass.componentName}\"]`));\n  if (!obj) {\n    console.error(`[App] Couldn\\'t find instance of ${componentClass.componentName} component. Check declaration order.`);\n    return;\n  }\n  return obj.component;\n};\n\n// https://davidwalsh.name/css-animation-callback\nexport function whichAnimationEvent() {\n  let t,\n      el = document.createElement('fakeelement');\n\n  let animations = {\n    'animation': 'animationend',\n    'OAnimation': 'oAnimationEnd',\n    'MozAnimation': 'animationend',\n    'WebkitAnimation': 'webkitAnimationEnd'\n  };\n\n  for (t in animations) {\n    if (el.style[t] !== undefined) {\n      return animations[t];\n    }\n  }\n};\n\nexport function whichTransitionEvent() {\n  let t,\n      el = document.createElement('fakeelement');\n\n  let transitions = {\n    'transition': 'transitionend',\n    'OTransition': 'oTransitionEnd',\n    'MozTransition': 'transitionend',\n    'WebkitTransition': 'webkitTransitionEnd'\n  };\n\n  for (t in transitions) {\n    if (el.style[t] !== undefined) {\n      return transitions[t];\n    }\n  }\n};\n\nexport function getRandom(min, max) {\n  return Math.random() * (max - min) + min;\n};\n\n/**\n * BreakpointListener\n * \n * Provide information when screen size changes from/to several breakpoints.\n * \n * @param {function} callback\n * @param {json} breakpoints\n */\nexport class BreakpointListener {\n  constructor(callback, breakpoints) {\n    this.screenSize = null;\n    this.windowWidth = window.innerWidth;\n    this.timeout = null;\n\n    this.checkView = () => {\n      let keys = Object.keys(breakpoints);\n\n      let screenSize = keys.slice(-1)[0];\n\n      for (let i=keys.length-1; i >= 0; i--) {\n        let value = breakpoints[keys[i]];\n        if (this.windowWidth < value) {\n          screenSize = keys[i-1] || 'xs';\n        }\n      }\n\n      let hasChanged = this.screenSize !== screenSize;\n\n      this.screenSize = screenSize;\n\n      callback({\n        screenSize: this.screenSize,\n        hasChanged: hasChanged\n      });\n    };\n\n    this.listener = () => {\n      if (this.windowWidth !== window.innerWidth) {\n        this.windowWidth = window.innerWidth;\n    \n        if (this.timeout) {\n          clearTimeout(this.timeout);\n        }\n    \n        this.timeout = setTimeout(this.checkView, 250);\n      }\n    };\n  \n    window.addEventListener('resize', this.listener);\n\n    this.checkView();\n  }\n};\n\nexport class Timer {\n  constructor(callback, delay) {\n    let timerId, start, remaining = delay;\n\n    this.pause = function () {\n      window.clearTimeout(timerId);\n      remaining -= new Date() - start;\n    };\n\n    let resume = function () {\n      start = new Date();\n      timerId = window.setTimeout(function () {\n        remaining = delay;\n        resume();\n        callback();\n      }, remaining);\n    };\n    this.resume = resume;\n\n    this.reset = function () {\n      remaining = delay;\n    };\n\n    this.resume();\n  }\n};\n"]}